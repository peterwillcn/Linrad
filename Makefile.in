# Copyright (c) <2012> <Leif Asbrink>
#
# Permission is hereby granted, free of charge, to any person 
# obtaining a copy of this software and associated documentation 
# files (the "Software"), to deal in the Software without restriction, 
# including without limitation the rights to use, copy, modify, 
# merge, publish, distribute, sublicense, and/or sell copies of 
# the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be 
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE 
# OR OTHER DEALINGS IN THE SOFTWARE.

#
# -----------     Compilers     ----------------
# Use gcc to compile files for Linux.
CC=gcc
# Name the output files *.ol instead of *.o
# so we definitely know it is for Linux.
# (*.o files can be present by mistake)
LCC     = ${CC} -D_FILE_OFFSET_BITS=64
WCC	= @MINGWBIN@ -D_FILE_OFFSET_BITS=64
WINWCC  = C:\mingw\bin\mingw32-gcc -D_FILE_OFFSET_BITS=64
NASML	= nasm -w-orphan-labels @ELF32@ -s -D @S_OS_TYPE@
NASMW	= nasm -w-orphan-labels -fwin32 -s -D OS_WINDOWS
WINNASM = C:\mingw\bin\nasm -w-orphan-labels -fwin32 -s -D OS_WINDOWS
NASML64	= nasm -w-orphan-labels @ELF64@ -s -D @S_OS_TYPE@
NASMW64	= nasm -w-orphan-labels -fwin64 -s -D OS_LINUX
WINNASM64 = C:\mingw\bin\nasm -w-orphan-labels -fwin64 -s -D OS_WINDOWS
WCC64	= x86_64-w64-mingw32-gcc -D_FILE_OFFSET_BITS=64
# Use the mingw cross compiler for Windows
# Name the output files *.ow instead of *.o
# so we definitely know it is for Windows.
# (*.o files can be present by mistake)
# Always use the same flags.
# -Wconversion -Wno-sign-conversion -Wunreachable-code
ifneq ($(OS),Windows_NT)
    OS=$(shell uname)
endif
ifeq ($(OS), Darwin)
    LIBMACOSX   = -framework IOKit -framework CoreFoundation
endif
CFL	= -g -O2 -DOSNUM=1 @X11_32_INC@ -W -Wall -DCPU=@CPU@ \
-DSHM_INSTALLED=@LIBXEXT32_OK@ -Wimplicit -Wbad-function-cast \
-DIA64=0 -Wnested-externs \
@DARWIN@ -DSERVER=@MAKE_SERVER@ \
-Wreturn-type -Wformat @M32@ -Wunused -Wcomment -Wchar-subscripts -Wshadow \
-Wuninitialized -Wparentheses -Wstrict-prototypes -Werror -ffast-math \
-Wundef -fomit-frame-pointer -c -o

CFLN	= -g -O2 -DOSNUM=1 @X11_32_INC@ -W -Wall -DCPU=@CPU@ \
-DSHM_INSTALLED=@LIBXEXT32_OK@ -Wimplicit \
-DIA64=0 \
@DARWIN@ -DSERVER=@MAKE_SERVER@ \
-Wconversion \
-Wreturn-type -Wformat @M32@ -Wunused -Wcomment -Wchar-subscripts -Wshadow \
-Wuninitialized -Wparentheses -Wstrict-prototypes -Werror -ffast-math \
-Wundef -fomit-frame-pointer -c -o

CFLOCL	= -g -O2 -DOSNUM=1 @X11_32_INC@ -W -Wall -DCPU=@CPU@ \
-DSHM_INSTALLED=@LIBXEXT32_OK@ -Wimplicit -Wbad-function-cast \
-DIA64=0 -Wnested-externs \
@DARWIN@ -DSERVER=@MAKE_SERVER@ \
-Wreturn-type -Wformat @M32@ -Wunused -Wcomment -Wchar-subscripts \
-Wuninitialized -Wparentheses -ffast-math \
-Wundef -fomit-frame-pointer -c -o

CFW	= -g -O2 -DOSNUM=2 -W -Wall -Wimplicit -DIA64=0 \
-DCPU=CPU_INTEL -DSERVER=@MAKE_SERVER@ \
@M32@ -Wreturn-type -Wformat -Wunused -Wcomment -Wchar-subscripts \
-Wshadow -Wuninitialized -Wparentheses -Wstrict-prototypes -Werror \
-ffast-math -Wundef -fomit-frame-pointer -c -o

# -fsyntax-only -pedantic -pedantic-errors -w -Wextra -Wall -Waddress -Waggrega

CFWN    = -g -O2 -DOSNUM=2 -W -Wall -Wimplicit -DIA64=0 \
-DCPU=CPU_INTEL -DSERVER=@MAKE_SERVER@ \
@M32@ -Wreturn-type -Wformat -Wunused -Wcomment -Wchar-subscripts \
-Wconversion \
-Wshadow -Wuninitialized -Wparentheses -Wstrict-prototypes -Werror \
-ffast-math -Wundef -fomit-frame-pointer -c -o

CFW64	= -g -O2 -DOSNUM=2 -W -Wall -Wimplicit -DIA64=1 \
-DCPU=CPU_INTEL -DSERVER=@MAKE_SERVER@ \
-m64 -Wreturn-type -Wformat -Wunused -Wcomment -Wchar-subscripts \
-Wshadow -Wuninitialized -Wparentheses -Wstrict-prototypes -Werror \
-ffast-math -Wundef -fomit-frame-pointer -c -o

CFL64	= -g -O2 -DOSNUM=1 @X11_64_INC@ -W -Wall \
-DCPU=@CPU@ -DSHM_INSTALLED=@LIBXEXT64_OK@ \
-DIA64=1 @DARWIN@ -DSERVER=@MAKE_SERVER@ \
-Wimplicit -Wreturn-type -Wformat -m64 -Wunused -Wcomment \
-Wchar-subscripts -Wshadow -Wuninitialized -Wparentheses \
-Wstrict-prototypes -Werror -ffast-math -Wundef -fomit-frame-pointer \
-c -o

CFLN64	= -g -O2 -DOSNUM=1 @X11_64_INC@ -W -Wall \
-DCPU=@CPU@ -DSHM_INSTALLED=@LIBXEXT64_OK@ \
-DIA64=1 @DARWIN@ -DSERVER=@MAKE_SERVER@ \
-Wconversion \
-Wimplicit -Wreturn-type -Wformat -m64 -Wunused -Wcomment \
-Wchar-subscripts -Wshadow -Wuninitialized -Wparentheses \
-Wstrict-prototypes -Werror -ffast-math -Wundef -fomit-frame-pointer \
-c -o

CFLOCL64	= -g -O2 -DOSNUM=1 @X11_64_INC@ -W -Wall \
-DCPU=@CPU@ -DSHM_INSTALLED=@LIBXEXT64_OK@ \
-DIA64=1 @DARWIN@ -DSERVER=@MAKE_SERVER@ \
-Wimplicit -Wreturn-type -Wformat -m64 -Wunused -Wcomment \
-Wchar-subscripts -Wuninitialized -Wparentheses \
-ffast-math -Wundef -fomit-frame-pointer \
-c -o

# Define dependencies for routines used both in Linux and Windows

ADTEST=adtest.c globdef.h uidef.h fft1def.h screendef.h rusage.h \
	thrdef.h powtdef.h
AFC_GRAPH=afc_graph.c globdef.h uidef.h fft1def.h fft2def.h vernr.h \
	seldef.h llsqdef.h sigdef.h screendef.h rusage.h thrdef.h
AFCSUB=afcsub.c globdef.h uidef.h fft1def.h fft2def.h screendef.h vernr.h \
	seldef.h llsqdef.h
AFEDRI=afedri.c globdef.h uidef.h sdrdef.h vernr.h screendef.h \
	hidapi.h options.h 
AFFINITY=affinity.c
AIRSPY=airspy.c timing_setup.c input_speed.c globdef.h uidef.h screendef.h \
	usbdefs.h hwaredef.h options.h
BASEB_GRAPH=baseb_graph.c globdef.h uidef.h fft1def.h screendef.h vernr.h \
	sigdef.h seldef.h fft2def.h fft3def.h graphcal.h rusage.h \
	thrdef.h options.h
BUF=buf.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	seldef.h blnkdef.h sigdef.h hwaredef.h
BLADERF=bladerf.c timing_setup.c input_speed.c globdef.h uidef.h sdrdef.h \
	screendef.h fft1def.h screendef.h rusage.h thrdef.h vernr.h \
	hwaredef.h options.h
BLANK1=blank1.c globdef.h uidef.h screendef.h blnkdef.h fft1def.h \
	fft2def.h rusage.h thrdef.h
BLNKVAR=blnkvar.c globdef.h blnkdef.h
CALIBRATE=calibrate.c globdef.h uidef.h fft1def.h screendef.h caldef.h \
	fft2def.h rusage.h thrdef.h keyboard_def.h
CALIQ=caliq.c globdef.h uidef.h fft1def.h caldef.h rusage.h thrdef.h \
	keyboard_def.h
CALSUB2=calsub2.c globdef.h uidef.h fft1def.h fft2def.h llsqdef.h caldef.h \
	keyboard_def.h
CALSUB=calsub.c globdef.h uidef.h fft1def.h fft2def.h caldef.h rusage.h \
	thrdef.h
CALVAR=calvar.c globdef.h caldef.h
COH_OSC=coh_osc.c globdef.h uidef.h sigdef.h screendef.h fft1def.h
COHERENT=coherent.c globdef.h uidef.h sigdef.h screendef.h fft1def.h \
	fft3def.h options.h rusage.h thrdef.h options.h
COHSUB=cohsub.c globdef.h uidef.h sigdef.h screendef.h fft1def.h options.h
CSPLIT=csplit.c globdef.h uidef.h
CWSPEED=cwspeed.c globdef.h uidef.h sigdef.h screendef.h fft1def.h \
	options.h llsqdef.h
CWDETECT=cwdetect.c globdef.h uidef.h sigdef.h screendef.h fft1def.h \
	options.h llsqdef.h fft3def.h
ELAD=elad.c loadusb.h globdef.h options.h uidef.h screendef.h fft1def.h \
	rusage.h usbdefs.h vernr.h thrdef.h
ELEKTOR=elektor.c globdef.h uidef.h fft1def.h screendef.h seldef.h \
	rusage.h thrdef.h loadusb.h
EME=eme.c globdef.h uidef.h screendef.h keyboard_def.h rusage.h thrdef.h
EXCALIBUR=excalibur.c timing_setup.c input_speed.c globdef.h uidef.h \
	thrdef.h sdrdef.h fft1def.h screendef.h vernr.h rusage.h options.h
EXTIO=extio.c globdef.h timing_setup.c input_speed.c uidef.h screendef.h \
	hwaredef.h seldef.h rusage.h thrdef.h fft1def.h keyboard_def.h \
	options.h
FCDPP=fcdpp.c fcdpp.c globdef.h uidef.h screendef.h seldef.h \
	rusage.h thrdef.h
FFT0=fft0.c globdef.h uidef.h fft1def.h fft2def.h
FFT1=fft1.c globdef.h uidef.h fft1def.h screendef.h caldef.h \
	seldef.h rusage.h thrdef.h options.h hwaredef.h
FFT1_RE=fft1_re.c globdef.h uidef.h fft1def.h
FFT1VAR=fft1var.c globdef.h fft1def.h
FFT2=fft2.c globdef.h uidef.h seldef.h fft1def.h fft2def.h screendef.h \
	sigdef.h rusage.h thrdef.h
FFT2VAR=fft2var.c globdef.h fft2def.h
FFT3=fft3.c globdef.h uidef.h seldef.h fft3def.h screendef.h sigdef.h \
	rusage.h thrdef.h
FFT3VAR=fft3var.c globdef.h fft3def.h
FONTS=fonts.c globdef.h uidef.h screendef.h
FREQ_CONTROL=freq_control.c globdef.h uidef.h seldef.h screendef.h hwaredef.h \
	fft1def.h rusage.h thrdef.h sdrdef.h
FM=fm.c globdef.h uidef.h fft1def.h fft3def.h sigdef.h seldef.h screendef.h \
	options.h
GIFSAVE=gifsave.c globdef.h uidef.h rusage.h thrdef.h conf.h options.h
HELP=help.c globdef.h uidef.h fft1def.h screendef.h seldef.h sigdef.h \
	thrdef.h vernr.h rusage.h options.h
ifeq ($(OS), Darwin)
HID=hidmac.c hidapi.h
else
HID=hid.c hidapi.h
endif
HIDWIN=hidwin.c hidapi.h
HIRES_GRAPH=hires_graph.c globdef.h uidef.h fft1def.h fft2def.h screendef.h \
	blnkdef.h  seldef.h graphcal.h vernr.h rusage.h thrdef.h sigdef.h
HTML_SERVER=html_server.c httpd.h
HTTPD=httpd.c httpd.h
HWAREDRIVER=hwaredriver.c globdef.h uidef.h hwaredef.h @DEPS2@ fft1def.h \
	wse_sdrxx.c seldef.h screendef.h rusage.h thrdef.h sdrdef.h conf.h \
	txdef.h
LLSQ=llsq.c globdef.h uidef.h llsqdef.h
LLSQVAR=llsqvar.c globdef.h llsqdef.h
LOADUSB=loadusb.c loadusb.h options.h
LOADALSA=loadalsa.c loadalsa.h
LSDR=lsdr.c globdef.h uidef.h sdrdef.h
KEYBOARD_VAR=keyboard_var.c keyboard_def.h
MENU=menu.c globdef.h uidef.h fft1def.h fft2def.h screendef.h powtdef.h \
	vernr.h sigdef.h seldef.h rusage.h thrdef.h sdrdef.h caldef.h \
	conf.h keyboard_def.h txdef.h options.h padef.h sdrdef.h \
	hwaredef.h fft3def.h padef.h loadalsa.h
METER_GRAPH=meter_graph.c globdef.h uidef.h sigdef.h screendef.h \
	rusage.h thrdef.h vernr.h fft1def.h
MIX1=mix1.c globdef.h uidef.h seldef.h fft1def.h fft2def.h fft3def.h \
	screendef.h sigdef.h
MIX2=mix2.c globdef.h uidef.h fft1def.h fft3def.h sigdef.h seldef.h \
	screendef.h blnkdef.h
MIRICS=mirics.c timing_setup.c input_speed.c globdef.h uidef.h sdrdef.h \
	fft1def.h screendef.h rusage.h thrdef.h vernr.h hwaredef.h \
	options.h
MODESUB=modesub.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h thrdef.h \
	@DEPS2@ seldef.h sigdef.h screendef.h vernr.h conf.h options.h \
	keyboard_def.h blnkdef.h caldef.h txdef.h rusage.h padef.h sdrdef.h
MORSE=morse.c globdef.h uidef.h fft1def.h sigdef.h screendef.h
MOUSE=mouse.c globdef.h uidef.h screendef.h keyboard_def.h rusage.h thrdef.h
NETWORK=network.c globdef.h uidef.h fft1def.h screendef.h fft2def.h vernr.h \
	caldef.h rusage.h thrdef.h keyboard_def.h seldef.h options.h sigdef.h \
	timing_setup.c input_speed.c
OCLPROGS=oclprogs.c oclprogs.h
OPENHPSDR=openhpsdr.c
PA=pa.c globdef.h conf.h uidef.h padef.h rusage.h thrdef.h sigdef.h \
	fft1def.h keyboard_def.h screendef.h txdef.h options.h
PAVAR=pavar.c padef.h
PALETTE=palette.c globdef.h screendef.h
PCIE9842=pcie9842.c timing_setup.c input_speed.c globdef.h uidef.h options.h \
	screendef.h rusage.h thrdef.h vernr.h sdrdef.h usbdefs.h fft1def.h 
PERSEUS=perseus.c timing_setup.c input_speed.c globdef.h uidef.h vernr.h \
	thrdef.h sdrdef.h fft1def.h screendef.h rusage.h options.h
POL_GRAPH=pol_graph.c globdef.h uidef.h screendef.h rusage.h thrdef.h \
	vernr.h
POWTIM=powtim.c globdef.h uidef.h sigdef.h fft1def.h fft2def.h screendef.h \
	rusage.h thrdef.h seldef.h powtdef.h
POWTVAR=powtvar.c powtdef.h
RADAR=radar.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	sigdef.h seldef.h conf.h hwaredef.h thrdef.h rusage.h vernr.h \
	keyboard_def.h options.h blnkdef.h txdef.h
RTL2832=rtl2832.c timing_setup.c input_speed.c globdef.h uidef.h screendef.h \
	usbdefs.h hwaredef.h
RXIN=rxin.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	sigdef.h seldef.h hwaredef.h thrdef.h rusage.h options.h
RXOUT=rxout.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h \
	screendef.h sigdef.h seldef.h thrdef.h rusage.h txdef.h options.h \
	conf.h
SCREEN=screen.c globdef.h uidef.h screendef.h fft1def.h fft2def.h fft3def.h \
	blnkdef.h sigdef.h seldef.h thrdef.h rusage.h hwaredef.h @DEPS3@ \
	conf.h txdef.h options.h
SCREENSUB=screensub.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h \
	seldef.h graphcal.h screendef.h sigdef.h rusage.h thrdef.h \
	options.h
SCREENVAR=screenvar.c globdef.h screendef.h
SDR14=sdr14.c timing_setup.c input_speed.c globdef.h uidef.h sdrdef.h \
	thrdef.h fft1def.h screendef.h vernr.h rusage.h options.h
SDRIP=sdrip.c timing_setup.c input_speed.c globdef.h uidef.h sdrdef.h \
	thrdef.h fft1def.h screendef.h hwaredef.h vernr.h rusage.h options.h
SDRVAR=sdrvar.c globdef.h sdrdef.h
SELLIM=sellim.c globdef.h uidef.h fft1def.h fft2def.h screendef.h seldef.h
SELVAR=selvar.c globdef.h seldef.h
SI570=si570.c globdef.h uidef.h screendef.h usbdefs.h options.h loadusb.h \
	rusage.h thrdef.h
SIGVAR=sigvar.c globdef.h sigdef.h
SOFT66=soft66.c globdef.h uidef.h screendef.h usbdefs.h loadusb.h options.h
SOUNDCARD=soundcard.c globdef.h uidef.h loadalsa.h 
SPUR=spur.c globdef.h uidef.h fft1def.h fft2def.h screendef.h seldef.h \
	sigdef.h rusage.h thrdef.h
SPURSUB=spursub.c globdef.h uidef.h fft1def.h fft2def.h screendef.h seldef.h
THRVAR=thrvar.c globdef.h thrdef.h rusage.h
TIMING=timing.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h sigdef.h \
	screendef.h rusage.h thrdef.h conf.h
TIMF2=timf2.c globdef.h uidef.h fft1def.h
TUNE=tune.c globdef.h uidef.h fft1def.h fft3def.h screendef.h sigdef.h \
	seldef.h hwaredef.h @DEPS2@ caldef.h rusage.h thrdef.h sdrdef.h
TX=tx.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	sigdef.h seldef.h rusage.h thrdef.h txdef.h vernr.h hwaredef.h \
	options.h keyboard_def.h
TX_GRAPH=tx_graph.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h \
	screendef.h sigdef.h seldef.h rusage.h thrdef.h txdef.h vernr.h \
	hwaredef.h keyboard_def.h
TXSSB=txssb.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	sigdef.h seldef.h rusage.h thrdef.h txdef.h vernr.h hwaredef.h \
	sdrdef.h keyboard_def.h options.h
TXTEST=txtest.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	sigdef.h seldef.h rusage.h thrdef.h
TXVAR=txvar.c globdef.h txdef.h
UI=ui.c globdef.h uidef.h screendef.h vernr.h sigdef.h fft1def.h thrdef.h \
	caldef.h powtdef.h keyboard_def.h rusage.h sdrdef.h txdef.h conf.h \
	options.h loadalsa.h
UIVAR=uivar.c globdef.h uidef.h rusage.h thrdef.h
USB2LPT=usb2lpt.c globdef.h uidef.h screendef.h usbdefs.h options.h \
	loadusb.h sdrdef.h
WCW=wcw.c globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	seldef.h sigdef.h thrdef.h rusage.h sdrdef.h \
	options.h blnkdef.h conf.h
WSDR=wsdr.c wdef.h globdef.h uidef.h fft1def.h sdrdef.h \
	screendef.h g31ddcapi.h rusage.h thrdef.h  
WIDE_GRAPH=wide_graph.c globdef.h uidef.h fft1def.h fft2def.h screendef.h \
	seldef.h graphcal.h vernr.h sigdef.h rusage.h thrdef.h
WSE=wse.c globdef.h sdrdef.h uidef.h screendef.h hwaredef.h txdef.h \
	fft1def.h rusage.h thrdef.h loadusb.h
WXSYS=wxsys.c globdef.h uidef.h rusage.h thrdef.h keyboard_def.h

# ----------  WELCOME MESSAGE FOR THE NEWCOMER ------------------
default:
	@echo ""
	@echo ""
	@echo "II--  When running under Microsoft Windows, install  --II"
	@echo "II  nasm, libusb and mingw32 in the folder C:\mingw32  II"
	@echo "II  Use configure.exe, then make.bat to get linrad.exe II"
	@echo "II-----------------------------------------------------II"
	@echo ""
	@echo "-------------- When running under Linux	--------------------------"
	@echo ""
	@echo "To produce a Linrad executable, do one of the following:"
	@echo "make linrad     - Linrad (32 bit) for Linux with svgalib."
	@echo "make linrad64   - Linrad (64 bit) for Linux with svgalib."
	@echo "make xlinrad    - Linrad (32 bit) for Linux under X11"
	@echo "make xlinrad64  - Linrad (64 bit) for Linux under X11"
	@echo "make flinrad    - Linrad (32 bit) for Linux framebuffer."
	@echo "make flinrad64  - Linrad (64 bit) for Linux framebuffer."
	@echo "make linrad.exe - Cross compile for Windows. mingw32 needed."
	@echo ""
	@echo "To produce scripts that install modules at boot time."
	@echo "(Reboot after sucessful completion of these commands)"
	@echo "make svgalib    - For svgalib to run as a normal user."
	@echo "                    svgalib_helper must be in/etc/linrad/xxxx"
	@echo "make sdr14      - To use the SDR-14 or SDR-IQ from RFSPACE"
	@echo "--------- other commands: make configure.exe, make sim ---------"
	@echo "-------------------------------------------------------------------"

# ----------  INFORMATION FOR THE EXPERIENCED LINUX USER ------------------
install:
	@echo ""
	@echo ""
	@echo "-------------------------------------------------------------------"
	@echo "The Linrad executable(s) are generated in the current"
	@echo "directory where all the source code resides."
	@echo "Type make without arguments to see which executables"
	@echo "could be made (if all supporting packages are installed.)"
	@echo ""
	@echo "Linrad saves run-time parameters in the currently logged"
	@echo "directory and does not copy the executable to $PREFIX/bin"
	@echo "That means that old installations are in no way affected"
	@echo "by new installations. "
	@echo ""
	@echo "To install a new version, (replace 03.48 by 03.49) do like this:"
	@echo "  cd /home/user"
	@echo "  tar xvfj lir03.49.tbz"
	@echo "  cd linrad-03.49"
	@echo "  cp ../linrad-03.48/par* ."
	@echo "  ./configure"
	@echo "Then follow the instructions."
	@echo "-------------------------------------------------------------------"
	@echo ""

clean: dummy.ol
	@echo ""
	@echo ""
	@echo "-------------------------------------------------------------------"
	@echo "To remove all old object files and to produce new configuration"
	@echo "dependent files run ./configure "
	@echo ""
	@echo "All parameter files par_* and all calibration data dsp_* files"
	@echo "will be left unchanged."
	@echo ""
	@echo "The ./clean command will remove also par* and dsp*"
	@echo "It is used to create new versions."
	@echo "-------------------------------------------------------------------"
	@echo ""
	
#The below is to get an output from make clean.
dummy.ol:

# ---------- Windows specific things compiling under Windows ---------------
@WLINRAD_EXE@ : Makefile wmain.oz keyboard_var.oz uivar.oz fft1var.oz \
fft3var.oz txvar.oz blnkvar.oz sigvar.oz calvar.oz screenvar.oz sdrvar.oz \
selvar.oz ui.oz palette.oz menu.oz fft2var.oz thrvar.oz modesub.oz \
blank1.oz buf.oz afcsub.oz afc_graph.oz adtest.oz powtvar.oz llsqvar.oz \
calibrate.oz calsub.oz calsub2.oz caliq.oz coh_osc.oz coherent.oz fm.oz \
cohsub.oz cwspeed.oz cwdetect.oz eme.oz fft0.oz fft1.oz airspy.oz \
fft1_re.oz fft2.oz fft3.oz spur.oz spursub.oz hwaredriver.oz screensub.oz \
freq_control.oz gifsave.oz help.oz hires_graph.oz llsq.oz baseb_graph.oz \
mix1.oz mix2.oz morse.oz mouse.oz pol_graph.oz powtim.oz rxin.oz screen.oz \
timing.oz timf2.oz tune.oz txtest.oz wcw.oz radar.oz wide_graph.oz split.oz \
network.oz sdr14.oz sellim.oz simdasm.oz getiq.oz fftasm.oz hware.oz pa.oz \
fft2mmxa.oz fft2mmxb.oz fft2mmxc.oz wsys.oz winvar.oz wsetad.oz fonts.oz \
meter_graph.oz tx.oz tx_graph.oz txssb.oz wxsys.oz perseus.oz pavar.oz \
rxout.oz sdrip.oz wsdr.oz si570.oz soft66.oz usb2lpt.oz excalibur.oz \
extio.oz wse.oz rtl2832.oz elektor.oz hidwin.oz fcdpp.oz pcie9842.oz \
bladerf.oz mirics.oz openhpsdr.oz httpd.oz html_server.oz afedri.oz \
affinity.oz loadusb.oz soundcard.oz

	$(WINWCC) -mwindows -mconsole -o linrad.exe -Wl,-s \
wmain.oz keyboard_var.oz uivar.oz fft1var.oz fft3var.oz txvar.oz ui.oz \
blnkvar.oz sigvar.oz screenvar.oz sdrvar.oz calvar.oz selvar.oz palette.oz \
thrvar.oz fft2var.oz menu.oz modesub.oz blank1.oz powtvar.oz llsqvar.oz \
calibrate.oz calsub.oz calsub2.oz caliq.oz buf.oz afcsub.oz afc_graph.oz \
adtest.oz coh_osc.oz coherent.oz cohsub.oz cwspeed.oz cwdetect.oz spur.oz \
eme.oz fft0.oz fft1.oz fft1_re.oz fft2.oz fft3.oz llsq.oz airspy.oz \
freq_control.oz gifsave.oz help.oz hires_graph.oz spursub.oz timf2.oz \
mix1.oz mix2.oz morse.oz mouse.oz pol_graph.oz powtim.oz rxin.oz screen.oz \
timing.oz tune.oz txtest.oz wcw.oz wide_graph.oz hwaredriver.oz fftasm.oz \
fft2mmxa.oz fft2mmxb.oz fft2mmxc.oz simdasm.oz getiq.oz wsys.oz hware.oz \
split.oz baseb_graph.oz network.oz sdr14.oz sellim.oz wsetad.oz fonts.oz \
meter_graph.oz screensub.oz wxsys.oz winvar.oz perseus.oz radar.oz pavar.oz \
pa.oz tx.oz tx_graph.oz txssb.oz rxout.oz fm.oz sdrip.oz wsdr.oz wse.oz \
si570.oz soft66.oz excalibur.oz usb2lpt.oz -lws2_32 -lgdi32 -lwinmm \
extio.oz rtl2832.oz elektor.oz hidwin.oz fcdpp.oz pcie9842.oz loadusb.oz \
bladerf.oz mirics.oz openhpsdr.oz httpd.oz html_server.oz afedri.oz \
affinity.oz soundcard.oz -lole32 -lsetupapi



split.oz: Makefile split.s
	$(WINNASM) split.s -o split.oz
fft2mmxa.oz: Makefile fft2mmxa.s
	$(WINNASM) fft2mmxa.s -o fft2mmxa.oz
fft2mmxb.oz: Makefile fft2mmxb.s
	$(WINNASM) fft2mmxb.s -o fft2mmxb.oz
fft2mmxc.oz: Makefile fft2mmxc.s
	$(WINNASM) fft2mmxc.s -o fft2mmxc.oz
fftasm.oz: Makefile fftasm.s
	$(WINNASM) fftasm.s -o fftasm.oz
getiq.oz: Makefile getiq.s
	$(WINNASM) getiq.s -o getiq.oz
simdasm.oz: Makefile simdasm.s
	$(WINNASM) simdasm.s -o simdasm.oz
hware.oz: Makefile hware.s
	$(WINNASM) hware.s -o hware.oz

wsys.oz: Makefile wsys.c wdef.h globdef.h uidef.h fft1def.h fft2def.h \
	fft3def.h screendef.h sigdef.h seldef.h blnkdef.h caldef.h txdef.h \
	sdrdef.h vernr.h keyboard_def.h rusage.h thrdef.h hwaredef.h
	$(WINWCC) wsys.c $(CFW) wsys.oz
wxsys.oz: Makefile $(WXSYS)
	$(WINWCC) wxsys.c $(CFW) wxsys.oz
wmain.oz: wmain.c wdef.h globdef.h uidef.h screendef.h \
	vernr.h options.h keyboard_def.h rusage.h thrdef.h conf.h
	$(WINWCC) wmain.c $(CFW) wmain.oz
winvar.oz: Makefile winvar.c wdef.h globdef.h uidef.h fft1def.h fft2def.h \
	fft3def.h screendef.h sigdef.h seldef.h blnkdef.h caldef.h txdef.h \
	vernr.h keyboard_def.h rusage.h thrdef.h
	$(WINWCC) winvar.c $(CFW) winvar.oz
wsetad.oz: Makefile wsetad.c wdef.h globdef.h uidef.h fft1def.h fft2def.h fft3def.h \
	screendef.h sigdef.h seldef.h blnkdef.h caldef.h sdrdef.h txdef.h \
	vernr.h keyboard_def.h hwaredef.h options.h \
	conf.h rusage.h thrdef.h timing_setup.c input_speed.c 
	$(WINWCC) wsetad.c $(CFW) wsetad.oz
wsdr.oz: Makefile $(WSDR) 
	$(WINWCC) wsdr.c $(CFW) wsdr.oz 



adtest.oz: Makefile $(ADTEST)
	$(WINWCC) adtest.c $(CFW) adtest.oz
afc_graph.oz: Makefile $(AFC_GRAPH)
	$(WINWCC) afc_graph.c $(CFW) afc_graph.oz
afcsub.oz: Makefile $(AFCSUB)
	$(WINWCC) afcsub.c $(CFW) afcsub.oz
afedri.oz: Makefile $(AFEDRI)
	$(WINWCC) afedri.c $(CFW) afedri.oz
affinity.oz: Makefile $(AFFFINITY)
	$(WINWCC) affinity.c $(CFW) affinity.oz
airspy.oz: $(AIRSPY)
	$(WINWCC) airspy.c $(CFW) airspy.oz
baseb_graph.oz: Makefile $(BASEB_GRAPH)
	$(WINWCC) baseb_graph.c $(CFW) baseb_graph.oz
buf.oz: Makefile $(BUF)
	$(WINWCC) buf.c $(CFW) buf.oz
bladerf.oz: Makefile $(BLADERF)
	$(WINWCC) bladerf.c $(CFW) bladerf.oz
blank1.oz: Makefile $(BLANK1)
	$(WINWCC) blank1.c $(CFW) blank1.oz
blnkvar.oz: Makefile $(BLNKVAR)
	$(WINWCC) blnkvar.c $(CFW) blnkvar.oz
calibrate.oz: Makefile $(CALIBRATE)
	$(WINWCC) calibrate.c $(CFW) calibrate.oz
caliq.oz: Makefile $(CALIQ)
	$(WINWCC) caliq.c $(CFW) caliq.oz
calsub.oz: Makefile $(CALSUB)
	$(WINWCC) calsub.c $(CFW) calsub.oz
calsub2.oz: Makefile $(CALSUB2)
	$(WINWCC) calsub2.c $(CFW) calsub2.oz
calvar.oz: Makefile $(CALVAR)
	$(WINWCC) calvar.c $(CFW) calvar.oz
coh_osc.oz: Makefile $(COH_OSC)
	$(WINWCC) coh_osc.c $(CFW) coh_osc.oz
coherent.oz: Makefile $(COHERENT)
	$(WINWCC) coherent.c $(CFW) coherent.oz
cohsub.oz: Makefile $(COHSUB)
	$(WINWCC) cohsub.c $(CFW) cohsub.oz
cwspeed.oz: Makefile $(CWSPEED)
	$(WINWCC) cwspeed.c $(CFW) cwspeed.oz
cwdetect.oz: Makefile $(CWDETECT)
	$(WINWCC) cwdetect.c $(CFW) cwdetect.oz
elektor.oz: Makefile $(ELEKTOR)
	$(WINWCC) elektor.c $(CFW) elektor.oz
eme.oz: Makefile $(EME)
	$(WINWCC) eme.c $(CFW) eme.oz
excalibur.oz: Makefile $(EXCALIBUR)
	$(WINWCC) excalibur.c $(CFW) excalibur.oz
extio.oz: Makefile $(EXTIO)
	$(WINWCC) extio.c $(CFW) extio.oz
fcdpp.oz: Makefile $(FCDPP)
	$(WINWCC) fcdpp.c $(CFW) fcdpp.oz
fft0.oz: Makefile $(FFT0)
	$(WINWCC) fft0.c $(CFW) fft0.oz
fft1.oz: Makefile $(FFT1)
	$(WINWCC) fft1.c $(CFW) fft1.oz
fft1_re.oz: Makefile $(FFT1_RE)
	$(WINWCC) fft1_re.c $(CFW) fft1_re.oz
fft1var.oz: Makefile $(FFT1VAR)
	$(WINWCC) fft1var.c $(CFW) fft1var.oz
fft2.oz: Makefile $(FFT2)
	$(WINWCC) fft2.c $(CFW) fft2.oz
fft2var.oz: Makefile $(FFT2VAR)
	$(WINWCC) fft2var.c $(CFW) fft2var.oz
fft3.oz: Makefile $(FFT3)
	$(WINWCC) fft3.c $(CFW) fft3.oz
fft3var.oz: Makefile $(FFT3VAR)
	$(WINWCC) fft3var.c $(CFW) fft3var.oz
fm.oz: Makefile $(FM) 
	$(WINWCC) fm.c $(CFW) fm.oz
fonts.oz: Makefile $(FONTS)
	$(WINWCC) fonts.c $(CFW) fonts.oz
freq_control.oz: Makefile $(FREQ_CONTROL) @WDEPS4@
	$(WINWCC) freq_control.c $(CFW) freq_control.oz
gifsave.oz: Makefile $(GIFSAVE)
	$(WINWCC) gifsave.c $(CFW) gifsave.oz
help.oz: Makefile $(HELP)
	$(WINWCC) help.c $(CFW) help.oz
hidwin.oz: Makefile $(HIDWIN)
	$(WINWCC) hidwin.c $(CFW) hidwin.oz
hires_graph.oz: Makefile $(HIRES_GRAPH)
	$(WINWCC) hires_graph.c $(CFW) hires_graph.oz
html_server.oz: Makefile $(HTML_SERVER)
	$(WINWCC) html_server.c $(CFW) html_server.oz
httpd.oz: Makefile $(HTTPD)
	$(WINWCC) httpd.c $(CFW) httpd.oz
hwaredriver.oz: Makefile $(HWAREDRIVER) @WDEPS1@ wdef.h
	$(WINWCC) hwaredriver.c $(CFW) hwaredriver.oz
keyboard_var.oz: Makefile $(KEYBOARD_VAR)
	$(WINWCC) keyboard_var.c $(CFW) keyboard_var.oz
llsq.oz: Makefile $(LLSQ)
	$(WINWCC) llsq.c $(CFW) llsq.oz
llsqvar.oz: Makefile $(LLSQVAR)
	$(WINWCC) llsqvar.c $(CFW) llsqvar.oz
loadusb.oz: Makefile $(LOADUSB)
	$(WINWCC) loadusb.c $(CFW) loadusb.oz
menu.oz: Makefile $(MENU)
	$(WINWCC) menu.c $(CFW) menu.oz
meter_graph.oz: Makefile $(METER_GRAPH)
	$(WINWCC) meter_graph.c $(CFW) meter_graph.oz
mix1.oz: Makefile $(MIX1)
	$(WINWCC) mix1.c $(CFW) mix1.oz
mix2.oz: Makefile $(MIX2)
	$(WINWCC) mix2.c $(CFW) mix2.oz
mirics.oz: Makefile $(MIRICS)
	$(WINWCC) mirics.c $(CFW) mirics.oz
modesub.oz: Makefile $(MODESUB)
	$(WINWCC) modesub.c $(CFW) modesub.oz
morse.oz: Makefile $(MORSE)
	$(WINWCC) morse.c $(CFW) morse.oz
mouse.oz: Makefile $(MOUSE)
	$(WINWCC) mouse.c $(CFW) mouse.oz
network.oz: Makefile $(NETWORK)
	$(WINWCC) network.c $(CFW) network.oz
pa.oz: Makefile $(PA)
	$(WINWCC) pa.c $(CFW) pa.oz
openhpsdr.oz: Makefile $(OPENHPSDR)
	$(WINWCC) openhpsdr.c $(CFW) openhpsdr.oz
pavar.oz: Makefile $(PAVAR)
	$(WINWCC) pavar.c $(CFW) pavar.oz
palette.oz: Makefile $(PALETTE)
	$(WINWCC) palette.c $(CFW) palette.oz
pcie9842.oz: Makefile $(PCIE9842)
	$(WINWCC) pcie9842.c $(CFW) pcie9842.oz
perseus.oz: Makefile $(PERSEUS)
	$(WINWCC) perseus.c $(CFW) perseus.oz
pol_graph.oz: Makefile $(POL_GRAPH)
	$(WINWCC) pol_graph.c $(CFW) pol_graph.oz
powtim.oz: Makefile $(POWTIM)
	$(WINWCC) powtim.c $(CFW) powtim.oz
powtvar.oz: Makefile $(POWTVAR)
	$(WINWCC) powtvar.c $(CFW) powtvar.oz
radar.oz: Makefile $(RADAR)
	$(WINWCC) radar.c $(CFW) radar.oz
rtl2832.oz: Makefile $(RTL2832)
	$(WINWCC) rtl2832.c $(CFW) rtl2832.oz
rxin.oz: Makefile $(RXIN)
	$(WINWCC) rxin.c $(CFW) rxin.oz
rxout.oz: Makefile $(RXOUT)
	$(WINWCC) rxout.c $(CFW) rxout.oz
screen.oz: Makefile $(SCREEN)
	$(WINWCC) screen.c $(CFW) screen.oz
screensub.oz: Makefile $(SCREENSUB)
	$(WINWCC) screensub.c $(CFW) screensub.oz
screenvar.oz: Makefile $(SCREENVAR)
	$(WINWCC) screenvar.c $(CFW) screenvar.oz
sdr14.oz: Makefile $(SDR14)
	$(WINWCC) sdr14.c $(CFW) sdr14.oz
sdrip.oz: Makefile $(SDRIP)
	$(WINWCC) sdrip.c $(CFW) sdrip.oz
sdrvar.oz: Makefile $(SDRVAR)
	$(WINWCC) sdrvar.c $(CFW) sdrvar.oz
sellim.oz: Makefile $(SELLIM)
	$(WINWCC) sellim.c $(CFW) sellim.oz
selvar.oz: Makefile $(SELVAR)
	$(WINWCC) selvar.c $(CFW) selvar.oz
si570.oz: Makefile $(SI570)
	$(WINWCC) si570.c $(CFW) si570.oz
sigvar.oz: Makefile $(SIGVAR)
	$(WINWCC) sigvar.c $(CFW) sigvar.oz
soft66.oz: Makefile $(SOFT66)
	$(WINWCC) soft66.c $(CFW) soft66.oz
soundcard.oz: Makefile $(SOUNDCARD)
	$(WINWCC) soundcard.c $(CFW) soundcard.oz
spur.oz: Makefile $(SPUR)
	$(WINWCC) spur.c $(CFW) spur.oz
spursub.oz: Makefile $(SPURSUB)
	$(WINWCC) spursub.c $(CFW) spursub.oz
thrvar.oz: Makefile $(THRVAR)
	$(WINWCC) thrvar.c $(CFW) thrvar.oz
timing.oz: Makefile $(TIMING)
	$(WINWCC) timing.c $(CFW) timing.oz
timf2.oz: Makefile $(TIMF2)
	$(WINWCC) timf2.c $(CFW) timf2.oz
tune.oz: Makefile $(TUNE)
	$(WINWCC) tune.c $(CFW) tune.oz
tx.oz: Makefile $(TX)
	$(WINWCC) tx.c $(CFW) tx.oz
tx_graph.oz: Makefile $(TX_GRAPH)
	$(WINWCC) tx_graph.c $(CFW) tx_graph.oz
txssb.oz: Makefile $(TXSSB)
	$(WINWCC) txssb.c $(CFW) txssb.oz
txtest.oz: Makefile $(TXTEST)
	$(WINWCC) txtest.c $(CFW) txtest.oz
txvar.oz: Makefile  $(TXVAR)
	$(WINWCC) txvar.c $(CFW) txvar.oz
ui.oz: Makefile $(UI)
	$(WINWCC) ui.c $(CFW) ui.oz
uivar.oz: Makefile  $(UIVAR)
	$(WINWCC) uivar.c $(CFW) uivar.oz
usb2lpt.oz: Makefile $(USB2LPT)
	$(WINWCC) usb2lpt.c $(CFW) usb2lpt.oz
wcw.oz: Makefile $(WCW)
	$(WINWCC) wcw.c $(CFW) wcw.oz
wide_graph.oz: Makefile $(WIDE_GRAPH)
	$(WINWCC) wide_graph.c $(CFW) wide_graph.oz
wse.oz: Makefile $(WSE)
	$(WINWCC) wse.c $(CFW) wse.oz


# ---------- Windows specific things compiling under Linux ---------------
  ifeq ("@WLIN_OK@", "0")
@LLINRAD_EXE@ : Makefile lmain.c
	@echo " "
  ifeq ("@MINGW32_OK@", "0")
	@echo "---------------------------------------------------------"
	@echo "To cross compile for Windows you need the mingw32 package."
	@echo " "
	@echo "Install the mingw32 package and run configure again."
	@echo "Debian, Ubuntu: apt-get install mingw32"
	@echo "old Fedora: yum install mingw32-gcc"
	@echo "Fedora 22 and later: dnf install mingw32-gcc"
	@echo "Mandriva: urpmi mingw32 -a"
	@echo "Mageia: urpmi mingw32-gcc"
	@echo " "
	@echo "NOTE: Very old 64 bit distros might not work."
	@echo "---------------------------------------------------------"
endif
else
@LLINRAD_EXE@ : Makefile wmain.ow keyboard_var.ow uivar.ow fft1var.ow \
fft3var.ow txvar.ow blnkvar.ow sigvar.ow calvar.ow screenvar.ow sdrvar.ow \
selvar.ow ui.ow palette.ow menu.ow fft2var.ow thrvar.ow modesub.ow \
blank1.ow buf.ow afcsub.ow afc_graph.ow adtest.ow powtvar.ow llsqvar.ow \
calibrate.ow calsub.ow calsub2.ow caliq.ow coh_osc.ow coherent.ow fm.ow \
cohsub.ow cwspeed.ow cwdetect.ow eme.ow fft0.ow fft1.ow airspy.ow \
fft1_re.ow fft2.ow fft3.ow spur.ow spursub.ow hwaredriver.ow screensub.ow \
freq_control.ow gifsave.ow help.ow hires_graph.ow llsq.ow baseb_graph.ow \
mix1.ow mix2.ow morse.ow mouse.ow pol_graph.ow powtim.ow rxin.ow screen.ow \
timing.ow timf2.ow tune.ow txtest.ow wcw.ow radar.ow wide_graph.ow split.ow \
network.ow sdr14.ow sellim.ow simdasm.ow getiq.ow fftasm.ow hware.ow pa.ow \
fft2mmxa.ow fft2mmxb.ow fft2mmxc.ow wsys.ow winvar.ow wsetad.ow fonts.ow \
meter_graph.ow tx.ow tx_graph.ow txssb.ow wxsys.ow perseus.ow pavar.ow \
rxout.ow sdrip.ow wsdr.ow si570.ow soft66.ow usb2lpt.ow excalibur.ow \
wse.ow extio.ow rtl2832.ow  elektor.ow fcdpp.ow hidwin.ow pcie9842.ow \
bladerf.ow mirics.ow openhpsdr.ow httpd.ow html_server.ow afedri.ow \
affinity.ow loadusb.ow soundcard.ow
	$(WCC) \
-o linrad.exe -Wl,-s \
wmain.ow keyboard_var.ow uivar.ow fft1var.ow fft3var.ow txvar.ow ui.ow \
blnkvar.ow sigvar.ow screenvar.ow sdrvar.ow calvar.ow selvar.ow palette.ow \
thrvar.ow fft2var.ow menu.ow modesub.ow blank1.ow powtvar.ow llsqvar.ow \
calibrate.ow calsub.ow calsub2.ow caliq.ow buf.ow afcsub.ow afc_graph.ow \
adtest.ow coh_osc.ow coherent.ow cohsub.ow cwspeed.ow cwdetect.ow spur.ow \
eme.ow fft0.ow fft1.ow fft1_re.ow fft2.ow fft3.ow llsq.ow airspy.ow \
freq_control.ow gifsave.ow help.ow hires_graph.ow spursub.ow timf2.ow \
mix1.ow mix2.ow morse.ow mouse.ow pol_graph.ow powtim.ow rxin.ow screen.ow \
timing.ow tune.ow txtest.ow wcw.ow wide_graph.ow hwaredriver.ow fftasm.ow \
fft2mmxa.ow fft2mmxb.ow fft2mmxc.ow simdasm.ow getiq.ow wsys.ow hware.ow \
split.ow baseb_graph.ow network.ow sdr14.ow sellim.ow wsetad.ow fonts.ow \
meter_graph.ow screensub.ow wxsys.ow winvar.ow perseus.ow radar.ow fm.ow \
tx.ow tx_graph.ow txssb.ow pavar.ow pa.ow rxout.ow sdrip.ow wsdr.ow \
wse.ow si570.ow soft66.ow usb2lpt.ow excalibur.ow extio.ow rtl2832.ow \
elektor.ow fcdpp.ow hidwin.ow pcie9842.ow bladerf.ow mirics.ow soundcard.ow \
openhpsdr.ow httpd.ow html_server.ow afedri.ow affinity.ow loadusb.ow \
-lws2_32 -lgdi32 -lwinmm -lsetupapi -lole32 
endif

split.ow: split.s
	$(NASMW) split.s -o split.ow
fft2mmxa.ow: fft2mmxa.s
	$(NASMW) fft2mmxa.s -o fft2mmxa.ow
fft2mmxb.ow: fft2mmxb.s
	$(NASMW) fft2mmxb.s -o fft2mmxb.ow
fft2mmxc.ow: fft2mmxc.s
	$(NASMW) fft2mmxc.s -o fft2mmxc.ow
fftasm.ow: fftasm.s
	$(NASMW) fftasm.s -o fftasm.ow
getiq.ow: getiq.s
	$(NASMW) getiq.s -o getiq.ow
simdasm.ow: simdasm.s
	$(NASMW) simdasm.s -o simdasm.ow
hware.ow: hware.s
	$(NASMW) hware.s -o hware.ow

wsys.ow: wsys.c wdef.h globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	sigdef.h seldef.h blnkdef.h caldef.h txdef.h sdrdef.h \
	vernr.h keyboard_def.h rusage.h thrdef.h hwaredef.h
	$(WCC) wsys.c $(CFW) wsys.ow
wxsys.ow: $(WXSYS)
	$(WCC) wxsys.c $(CFW) wxsys.ow
wmain.ow: wmain.c wdef.h globdef.h uidef.h screendef.h \
	vernr.h options.h keyboard_def.h rusage.h thrdef.h conf.h
	$(WCC) wmain.c $(CFW) wmain.ow
winvar.ow: winvar.c wdef.h globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	sigdef.h seldef.h blnkdef.h caldef.h txdef.h \
	vernr.h keyboard_def.h rusage.h thrdef.h
	$(WCC) winvar.c $(CFW) winvar.ow
wsetad.ow: wsetad.c wdef.h globdef.h uidef.h fft1def.h fft2def.h fft3def.h \
	screendef.h sigdef.h seldef.h blnkdef.h caldef.h sdrdef.h txdef.h \
	hwaredef.h vernr.h keyboard_def.h rusage.h thrdef.h options.h conf.h \
	timing_setup.c input_speed.c
	$(WCC) wsetad.c $(CFW) wsetad.ow
wsdr.ow: $(WSDR)
	$(WCC) wsdr.c $(CFW) wsdr.ow



adtest.ow: $(ADTEST)
	$(WCC) adtest.c $(CFW) adtest.ow
afc_graph.ow: $(AFC_GRAPH)
	$(WCC) afc_graph.c $(CFW) afc_graph.ow
afcsub.ow: $(AFCSUB)
	$(WCC) afcsub.c $(CFW) afcsub.ow
afedri.ow: Makefile $(AFEDRI)
	$(WCC) afedri.c $(CFW) afedri.ow
affinity.ow: Makefile $(AFFINITY)
	$(WCC) affinity.c $(CFW) affinity.ow
airspy.ow: $(AIRSPY)
	$(WCC) airspy.c $(CFW) airspy.ow
baseb_graph.ow: $(BASEB_GRAPH)
	$(WCC) baseb_graph.c $(CFW) baseb_graph.ow
buf.ow: $(BUF)
	$(WCC) buf.c $(CFW) buf.ow
bladerf.ow: Makefile $(BLADERF)
	$(WCC) bladerf.c $(CFW) bladerf.ow
blank1.ow: $(BLANK1)
	$(WCC) blank1.c $(CFW) blank1.ow
blnkvar.ow: $(BLNKVAR)
	$(WCC) blnkvar.c $(CFW) blnkvar.ow
calibrate.ow: $(CALIBRATE)
	$(WCC) calibrate.c $(CFW) calibrate.ow
caliq.ow: $(CALIQ)
	$(WCC) caliq.c $(CFW) caliq.ow
calsub.ow: $(CALSUB)
	$(WCC) calsub.c $(CFW) calsub.ow
calsub2.ow: $(CALSUB2)
	$(WCC) calsub2.c $(CFW) calsub2.ow
calvar.ow: $(CALVAR)
	$(WCC) calvar.c $(CFW) calvar.ow
coh_osc.ow: $(COH_OSC)
	$(WCC) coh_osc.c $(CFW) coh_osc.ow
coherent.ow: $(COHERENT)
	$(WCC) coherent.c $(CFW) coherent.ow
cohsub.ow: $(COHSUB)
	$(WCC) cohsub.c $(CFW) cohsub.ow
cwspeed.ow: $(CWSPEED)
	$(WCC) cwspeed.c $(CFW) cwspeed.ow
cwdetect.ow: $(CWDETECT)
	$(WCC) cwdetect.c $(CFW) cwdetect.ow
elektor.ow: Makefile $(ELEKTOR)
	$(WCC) elektor.c $(CFW) elektor.ow
eme.ow: $(EME)
	$(WCC) eme.c $(CFW) eme.ow
excalibur.ow: $(EXCALIBUR)
	$(WCC) excalibur.c $(CFW) excalibur.ow
extio.ow: $(EXTIO)
	$(WCC) extio.c $(CFW) extio.ow
fcdpp.ow: Makefile $(FCDPP)
	$(WCC) fcdpp.c $(CFW) fcdpp.ow
fft0.ow: $(FFT0)
	$(WCC) fft0.c $(CFW) fft0.ow
fft1.ow: $(FFT1)
	$(WCC) fft1.c $(CFW) fft1.ow
fft1_re.ow: $(FFT1_RE)
	$(WCC) fft1_re.c $(CFW) fft1_re.ow
fft1var.ow: $(FFT1VAR)
	$(WCC) fft1var.c $(CFW) fft1var.ow
fft2.ow: $(FFT2)
	$(WCC) fft2.c $(CFW) fft2.ow
fft2var.ow: $(FFT2VAR)
	$(WCC) fft2var.c $(CFW) fft2var.ow
fft3.ow: $(FFT3)
	$(WCC) fft3.c $(CFW) fft3.ow
fft3var.ow: $(FFT3VAR)
	$(WCC) fft3var.c $(CFW) fft3var.ow
fm.ow: $(FM) 
	$(WCC) fm.c $(CFW) fm.ow
fonts.ow: $(FONTS)
	$(WCC) fonts.c $(CFW) fonts.ow
freq_control.ow: $(FREQ_CONTROL) @WDEPS4@
	$(WCC) freq_control.c $(CFW) freq_control.ow
gifsave.ow: $(GIFSAVE)
	$(WCC) gifsave.c $(CFW) gifsave.ow
help.ow: $(HELP)
	$(WCC) help.c $(CFW) help.ow
hidwin.ow: Makefile $(HIDWIN)
	$(WCC) hidwin.c $(CFW) hidwin.ow
hires_graph.ow: $(HIRES_GRAPH)
	$(WCC) hires_graph.c $(CFW) hires_graph.ow
html_server.ow: Makefile $(HTML_SERVER)
	$(WCC) html_server.c $(CFW) html_server.ow
httpd.ow: $(HTTPD)
	$(WCC) httpd.c $(CFW) httpd.ow
hwaredriver.ow: $(HWAREDRIVER) @WDEPS1@ wdef.h
	$(WCC) hwaredriver.c $(CFW) hwaredriver.ow
keyboard_var.ow: $(KEYBOARD_VAR)
	$(WCC) keyboard_var.c $(CFW) keyboard_var.ow
llsq.ow: $(LLSQ)
	$(WCC) llsq.c $(CFW) llsq.ow
llsqvar.ow: $(LLSQVAR)
	$(WCC) llsqvar.c $(CFW) llsqvar.ow
loadusb.ow: $(LOADUSB)
	$(WCC) loadusb.c $(CFW) loadusb.ow
menu.ow: $(MENU)
	$(WCC) menu.c $(CFW) menu.ow
meter_graph.ow: $(METER_GRAPH)
	$(WCC) meter_graph.c $(CFW) meter_graph.ow
mix1.ow: $(MIX1)
	$(WCC) mix1.c $(CFW) mix1.ow
mix2.ow: $(MIX2)
	$(WCC) mix2.c $(CFW) mix2.ow
mirics.ow: Makefile $(MIRICS)
	$(WCC) mirics.c $(CFW) mirics.ow
modesub.ow: $(MODESUB)
	$(WCC) modesub.c $(CFW) modesub.ow
morse.ow: $(MORSE)
	$(WCC) morse.c $(CFW) morse.ow
mouse.ow: $(MOUSE)
	$(WCC) mouse.c $(CFW) mouse.ow
network.ow: $(NETWORK)
	$(WCC) network.c $(CFW) network.ow
pa.ow: $(PA)
	$(WCC) pa.c $(CFW) pa.ow
openhpsdr.ow: Makefile $(OPENHPSDR)
	$(WCC) openhpsdr.c $(CFW) openhpsdr.ow
pavar.ow: $(PAVAR)
	$(WCC) pavar.c $(CFW) pavar.ow
palette.ow: $(PALETTE)
	$(WCC) palette.c $(CFW) palette.ow
pcie9842.ow: Makefile $(PCIE9842)
	$(WCC) pcie9842.c $(CFW) pcie9842.ow
perseus.ow: $(PERSEUS)
	$(WCC) perseus.c $(CFW) perseus.ow
pol_graph.ow: $(POL_GRAPH)
	$(WCC) pol_graph.c $(CFW) pol_graph.ow
powtim.ow: $(POWTIM)
	$(WCC) powtim.c $(CFW) powtim.ow
powtvar.ow: $(POWTVAR)
	$(WCC) powtvar.c $(CFW) powtvar.ow
radar.ow: $(RADAR)
	$(WCC) radar.c $(CFW) radar.ow
rtl2832.ow: $(RTL2832)
	$(WCC) rtl2832.c $(CFW) rtl2832.ow
rxin.ow: $(RXIN)
	$(WCC) rxin.c $(CFW) rxin.ow
rxout.ow: $(RXOUT)
	$(WCC) rxout.c $(CFW) rxout.ow
screen.ow: $(SCREEN)
	$(WCC) screen.c $(CFW) screen.ow
screensub.ow: $(SCREENSUB)
	$(WCC) screensub.c $(CFW) screensub.ow
screenvar.ow: $(SCREENVAR)
	$(WCC) screenvar.c $(CFW) screenvar.ow
sdr14.ow: $(SDR14)
	$(WCC) sdr14.c $(CFW) sdr14.ow
sdrip.ow: $(SDRIP)
	$(WCC) sdrip.c $(CFW) sdrip.ow
sdrvar.ow: $(SDRVAR)
	$(WCC) sdrvar.c $(CFW) sdrvar.ow
sellim.ow: $(SELLIM)
	$(WCC) sellim.c $(CFW) sellim.ow
selvar.ow: $(SELVAR)
	$(WCC) selvar.c $(CFW) selvar.ow
si570.ow: $(SI570)
	$(WCC) si570.c $(CFW) si570.ow
sigvar.ow: $(SIGVAR)
	$(WCC) sigvar.c $(CFW) sigvar.ow
soft66.ow: $(SOFT66)
	$(WCC) soft66.c $(CFW) soft66.ow
soundcard.ow: $(SOUNDCARD)
	$(WCC) soundcard.c $(CFW) soundcard.ow
spur.ow: $(SPUR)
	$(WCC) spur.c $(CFW) spur.ow
spursub.ow: $(SPURSUB)
	$(WCC) spursub.c $(CFW) spursub.ow
thrvar.ow: $(THRVAR)
	$(WCC) thrvar.c $(CFW) thrvar.ow
timing.ow: $(TIMING)
	$(WCC) timing.c $(CFW) timing.ow
timf2.ow: $(TIMF2)
	$(WCC) timf2.c $(CFW) timf2.ow
tune.ow: $(TUNE)
	$(WCC) tune.c $(CFW) tune.ow
tx.ow: $(TX)
	$(WCC) tx.c $(CFW) tx.ow
tx_graph.ow: $(TX_GRAPH)
	$(WCC) tx_graph.c $(CFW) tx_graph.ow
txssb.ow: $(TXSSB)
	$(WCC) txssb.c $(CFW) txssb.ow
txtest.ow: $(TXTEST)
	$(WCC) txtest.c $(CFW) txtest.ow
txvar.ow:  $(TXVAR)
	$(WCC) txvar.c $(CFW) txvar.ow
ui.ow: $(UI)
	$(WCC) ui.c $(CFW) ui.ow
uivar.ow:  $(UIVAR)
	$(WCC) uivar.c $(CFW) uivar.ow
usb2lpt.ow: $(USB2LPT)
	$(WCC) usb2lpt.c $(CFW) usb2lpt.ow
wcw.ow: $(WCW)
	$(WCC) wcw.c $(CFW) wcw.ow
wide_graph.ow: $(WIDE_GRAPH)
	$(WCC) wide_graph.c $(CFW) wide_graph.ow
wse.ow: $(WSE)
	$(WCC) wse.c $(CFW) wse.ow


linrad64.exe : Makefile wmain.oy keyboard_var.oy uivar.oy fft1var.oy \
fft3var.oy txvar.oy blnkvar.oy sigvar.oy calvar.oy screenvar.oy sdrvar.oy \
selvar.oy ui.oy palette.oy menu.oy fft2var.oy thrvar.oy modesub.oy \
blank1.oy buf.oy afcsub.oy afc_graph.oy adtest.oy powtvar.oy llsqvar.oy \
calibrate.oy calsub.oy calsub2.oy caliq.oy coh_osc.oy coherent.oy fm.oy \
cohsub.oy cwspeed.oy cwdetect.oy eme.oy fft0.oy fft1.oy airspy.oy \
fft1_re.oy fft2.oy fft3.oy spur.oy spursub.oy hwaredriver.oy screensub.oy \
freq_control.oy gifsave.oy help.oy hires_graph.oy llsq.oy baseb_graph.oy \
mix1.oy mix2.oy morse.oy mouse.oy pol_graph.oy powtim.oy rxin.oy screen.oy \
timing.oy timf2.oy tune.oy txtest.oy wcw.oy radar.oy wide_graph.oy split.oy \
network.oy sdr14.oy sellim.oy simdasm.oy getiq.oy fftasm.oy hware.oy pa.oy \
fft2mmxa.oy fft2mmxb.oy fft2mmxc.oy wsys.oy winvar.oy wsetad.oy fonts.oy \
meter_graph.oy tx.oy tx_graph.oy txssb.oy wxsys.oy perseus.oy pavar.oy \
rxout.oy sdrip.oy wsdr.oy si570.oy soft66.oy usb2lpt.oy excalibur.oy \
wse.oy extio.oy rtl2832.oy  elektor.oy fcdpp.oy hidwin.oy pcie9842.oy \
bladerf.oy mirics.oy openhpsdr.oy httpd.oy html_server.oy afedri.oy \
affinity.oy loadusb.oy soundcard.oy
	$(WCC64) \
-o linrad64.exe -Wl,-s \
wmain.oy keyboard_var.oy uivar.oy fft1var.oy fft3var.oy txvar.oy ui.oy \
blnkvar.oy sigvar.oy screenvar.oy sdrvar.oy calvar.oy selvar.oy palette.oy \
thrvar.oy fft2var.oy menu.oy modesub.oy blank1.oy powtvar.oy llsqvar.oy \
calibrate.oy calsub.oy calsub2.oy caliq.oy buf.oy afcsub.oy afc_graph.oy \
adtest.oy coh_osc.oy coherent.oy cohsub.oy cwspeed.oy cwdetect.oy spur.oy \
eme.oy fft0.oy fft1.oy fft1_re.oy fft2.oy fft3.oy llsq.oy airspy.oy \
freq_control.oy gifsave.oy help.oy hires_graph.oy spursub.oy timf2.oy \
mix1.oy mix2.oy morse.oy mouse.oy pol_graph.oy powtim.oy rxin.oy screen.oy \
timing.oy tune.oy txtest.oy wcw.oy wide_graph.oy hwaredriver.oy fftasm.oy \
fft2mmxa.oy fft2mmxb.oy fft2mmxc.oy simdasm.oy getiq.oy wsys.oy hware.oy \
split.oy baseb_graph.oy network.oy sdr14.oy sellim.oy wsetad.oy fonts.oy \
meter_graph.oy screensub.oy wxsys.oy winvar.oy perseus.oy radar.oy fm.oy \
tx.oy tx_graph.oy txssb.oy pavar.oy pa.oy rxout.oy sdrip.oy wsdr.oy \
wse.oy si570.oy soft66.oy usb2lpt.oy excalibur.oy extio.oy rtl2832.oy \
elektor.oy fcdpp.oy hidwin.oy pcie9842.oy bladerf.oy mirics.oy soundcard.oy \
openhpsdr.oy httpd.oy html_server.oy afedri.oy affinity.oy loadusb.oy \
-lws2_32 -lgdi32 -lwinmm -lsetupapi -lole32 

split.oy: split64.s
	$(NASMW64) split64.s -o split.oy
fft2mmxa.oy: fft2mmxa64.s
	$(NASMW64) fft2mmxa64.s -o fft2mmxa.oy
fft2mmxb.oy: fft2mmxb64.s
	$(NASMW64) fft2mmxb64.s -o fft2mmxb.oy
fft2mmxc.oy: fft2mmxc64.s
	$(NASMW64) fft2mmxc64.s -o fft2mmxc.oy
fftasm.oy: fftasm64.s
	$(NASMW64) fftasm64.s -o fftasm.oy
getiq.oy: getiq64.s
	$(NASMW64) getiq64.s -o getiq.oy
simdasm.oy: simdasm64.s
	$(NASMW64) simdasm64.s -o simdasm.oy
hware.oy: hware64.s
	$(NASMW64) hware64.s -o hware.oy

wsys.oy: wsys.c wdef.h globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	sigdef.h seldef.h blnkdef.h caldef.h txdef.h sdrdef.h \
	vernr.h keyboard_def.h rusage.h thrdef.h hwaredef.h
	$(WCC64) wsys.c $(CFW64) wsys.oy
wxsys.oy: $(WXSYS)
	$(WCC64) wxsys.c $(CFW64) wxsys.oy
wmain.oy: wmain.c wdef.h globdef.h uidef.h screendef.h \
	vernr.h options.h keyboard_def.h rusage.h thrdef.h conf.h
	$(WCC64) wmain.c $(CFW64) wmain.oy
winvar.oy: winvar.c wdef.h globdef.h uidef.h fft1def.h fft2def.h fft3def.h screendef.h \
	sigdef.h seldef.h blnkdef.h caldef.h txdef.h \
	vernr.h keyboard_def.h rusage.h thrdef.h
	$(WCC64) winvar.c $(CFW64) winvar.oy
wsetad.oy: wsetad.c wdef.h globdef.h uidef.h fft1def.h fft2def.h fft3def.h \
	screendef.h sigdef.h seldef.h blnkdef.h caldef.h sdrdef.h txdef.h \
	hwaredef.h vernr.h keyboard_def.h rusage.h thrdef.h options.h conf.h \
	timing_setup.c input_speed.c
	$(WCC64) wsetad.c $(CFW64) wsetad.oy
wsdr.oy: $(WSDR)
	$(WCC64) wsdr.c $(CFW64) wsdr.oy



adtest.oy: $(ADTEST)
	$(WCC64) adtest.c $(CFW64) adtest.oy
afc_graph.oy: $(AFC_GRAPH)
	$(WCC64) afc_graph.c $(CFW64) afc_graph.oy
afcsub.oy: $(AFCSUB)
	$(WCC64) afcsub.c $(CFW64) afcsub.oy
afedri.oy: Makefile $(AFEDRI)
	$(WCC64) afedri.c $(CFW64) afedri.oy
affinity.oy: Makefile $(AFFINITY)
	$(WCC64) affinity.c $(CFW64) affinity.oy
airspy.oy: $(AIRSPY)
	$(WCC64) airspy.c $(CFW64) airspy.oy
baseb_graph.oy: $(BASEB_GRAPH)
	$(WCC64) baseb_graph.c $(CFW64) baseb_graph.oy
buf.oy: $(BUF)
	$(WCC64) buf.c $(CFW64) buf.oy
bladerf.oy: Makefile $(BLADERF)
	$(WCC64) bladerf.c $(CFW64) bladerf.oy
blank1.oy: $(BLANK1)
	$(WCC64) blank1.c $(CFW64) blank1.oy
blnkvar.oy: $(BLNKVAR)
	$(WCC64) blnkvar.c $(CFW64) blnkvar.oy
calibrate.oy: $(CALIBRATE)
	$(WCC64) calibrate.c $(CFW64) calibrate.oy
caliq.oy: $(CALIQ)
	$(WCC64) caliq.c $(CFW64) caliq.oy
calsub.oy: $(CALSUB)
	$(WCC64) calsub.c $(CFW64) calsub.oy
calsub2.oy: $(CALSUB2)
	$(WCC64) calsub2.c $(CFW64) calsub2.oy
calvar.oy: $(CALVAR)
	$(WCC64) calvar.c $(CFW64) calvar.oy
coh_osc.oy: $(COH_OSC)
	$(WCC64) coh_osc.c $(CFW64) coh_osc.oy
coherent.oy: $(COHERENT)
	$(WCC64) coherent.c $(CFW64) coherent.oy
cohsub.oy: $(COHSUB)
	$(WCC64) cohsub.c $(CFW64) cohsub.oy
cwspeed.oy: $(CWSPEED)
	$(WCC64) cwspeed.c $(CFW64) cwspeed.oy
cwdetect.oy: $(CWDETECT)
	$(WCC64) cwdetect.c $(CFW64) cwdetect.oy
elektor.oy: Makefile $(ELEKTOR)
	$(WCC64) elektor.c $(CFW64) elektor.oy
eme.oy: $(EME)
	$(WCC64) eme.c $(CFW64) eme.oy
excalibur.oy: $(EXCALIBUR)
	$(WCC64) excalibur.c $(CFW64) excalibur.oy
extio.oy: $(EXTIO)
	$(WCC64) extio.c $(CFW64) extio.oy
fcdpp.oy: Makefile $(FCDPP)
	$(WCC64) fcdpp.c $(CFW64) fcdpp.oy
fft0.oy: $(FFT0)
	$(WCC64) fft0.c $(CFW64) fft0.oy
fft1.oy: $(FFT1)
	$(WCC64) fft1.c $(CFW64) fft1.oy
fft1_re.oy: $(FFT1_RE)
	$(WCC64) fft1_re.c $(CFW64) fft1_re.oy
fft1var.oy: $(FFT1VAR)
	$(WCC64) fft1var.c $(CFW64) fft1var.oy
fft2.oy: $(FFT2)
	$(WCC64) fft2.c $(CFW64) fft2.oy
fft2var.oy: $(FFT2VAR)
	$(WCC64) fft2var.c $(CFW64) fft2var.oy
fft3.oy: $(FFT3)
	$(WCC64) fft3.c $(CFW64) fft3.oy
fft3var.oy: $(FFT3VAR)
	$(WCC64) fft3var.c $(CFW64) fft3var.oy
fm.oy: $(FM) 
	$(WCC64) fm.c $(CFW64) fm.oy
fonts.oy: $(FONTS)
	$(WCC64) fonts.c $(CFW64) fonts.oy
freq_control.oy: $(FREQ_CONTROL) @WDEPS4@
	$(WCC64) freq_control.c $(CFW64) freq_control.oy
gifsave.oy: $(GIFSAVE)
	$(WCC64) gifsave.c $(CFW64) gifsave.oy
help.oy: $(HELP)
	$(WCC64) help.c $(CFW64) help.oy
hidwin.oy: Makefile $(HIDWIN)
	$(WCC64) hidwin.c $(CFW64) hidwin.oy
hires_graph.oy: $(HIRES_GRAPH)
	$(WCC64) hires_graph.c $(CFW64) hires_graph.oy
html_server.oy: Makefile $(HTML_SERVER)
	$(WCC64) html_server.c $(CFW64) html_server.oy
httpd.oy: $(HTTPD)
	$(WCC64) httpd.c $(CFW64) httpd.oy
hwaredriver.oy: $(HWAREDRIVER) @WDEPS1@ wdef.h
	$(WCC64) hwaredriver.c $(CFW64) hwaredriver.oy
keyboard_var.oy: $(KEYBOARD_VAR)
	$(WCC64) keyboard_var.c $(CFW64) keyboard_var.oy
llsq.oy: $(LLSQ)
	$(WCC64) llsq.c $(CFW64) llsq.oy
llsqvar.oy: $(LLSQVAR)
	$(WCC64) llsqvar.c $(CFW64) llsqvar.oy
loadusb.oy: $(LOADUSB)
	$(WCC64) loadusb.c $(CFW64) loadusb.oy
menu.oy: $(MENU)
	$(WCC64) menu.c $(CFW64) menu.oy
meter_graph.oy: $(METER_GRAPH)
	$(WCC64) meter_graph.c $(CFW64) meter_graph.oy
mix1.oy: $(MIX1)
	$(WCC64) mix1.c $(CFW64) mix1.oy
mix2.oy: $(MIX2)
	$(WCC64) mix2.c $(CFW64) mix2.oy
mirics.oy: Makefile $(MIRICS)
	$(WCC64) mirics.c $(CFW64) mirics.oy
modesub.oy: $(MODESUB)
	$(WCC64) modesub.c $(CFW64) modesub.oy
morse.oy: $(MORSE)
	$(WCC64) morse.c $(CFW64) morse.oy
mouse.oy: $(MOUSE)
	$(WCC64) mouse.c $(CFW64) mouse.oy
network.oy: $(NETWORK)
	$(WCC64) network.c $(CFW64) network.oy
pa.oy: $(PA)
	$(WCC64) pa.c $(CFW64) pa.oy
openhpsdr.oy: Makefile $(OPENHPSDR)
	$(WCC64) openhpsdr.c $(CFW64) openhpsdr.oy
pavar.oy: $(PAVAR)
	$(WCC64) pavar.c $(CFW64) pavar.oy
palette.oy: $(PALETTE)
	$(WCC64) palette.c $(CFW64) palette.oy
pcie9842.oy: Makefile $(PCIE9842)
	$(WCC64) pcie9842.c $(CFW64) pcie9842.oy
perseus.oy: $(PERSEUS)
	$(WCC64) perseus.c $(CFW64) perseus.oy
pol_graph.oy: $(POL_GRAPH)
	$(WCC64) pol_graph.c $(CFW64) pol_graph.oy
powtim.oy: $(POWTIM)
	$(WCC64) powtim.c $(CFW64) powtim.oy
powtvar.oy: $(POWTVAR)
	$(WCC64) powtvar.c $(CFW64) powtvar.oy
radar.oy: $(RADAR)
	$(WCC64) radar.c $(CFW64) radar.oy
rtl2832.oy: $(RTL2832)
	$(WCC64) rtl2832.c $(CFW64) rtl2832.oy
rxin.oy: $(RXIN)
	$(WCC64) rxin.c $(CFW64) rxin.oy
rxout.oy: $(RXOUT)
	$(WCC64) rxout.c $(CFW64) rxout.oy
screen.oy: $(SCREEN)
	$(WCC64) screen.c $(CFW64) screen.oy
screensub.oy: $(SCREENSUB)
	$(WCC64) screensub.c $(CFW64) screensub.oy
screenvar.oy: $(SCREENVAR)
	$(WCC64) screenvar.c $(CFW64) screenvar.oy
sdr14.oy: $(SDR14)
	$(WCC64) sdr14.c $(CFW64) sdr14.oy
sdrip.oy: $(SDRIP)
	$(WCC64) sdrip.c $(CFW64) sdrip.oy
sdrvar.oy: $(SDRVAR)
	$(WCC64) sdrvar.c $(CFW64) sdrvar.oy
sellim.oy: $(SELLIM)
	$(WCC64) sellim.c $(CFW64) sellim.oy
selvar.oy: $(SELVAR)
	$(WCC64) selvar.c $(CFW64) selvar.oy
si570.oy: $(SI570)
	$(WCC64) si570.c $(CFW64) si570.oy
sigvar.oy: $(SIGVAR)
	$(WCC64) sigvar.c $(CFW64) sigvar.oy
soft66.oy: $(SOFT66)
	$(WCC64) soft66.c $(CFW64) soft66.oy
soundcard.oy: $(SOUNDCARD)
	$(WCC64) soundcard.c $(CFW64) soundcard.oy
spur.oy: $(SPUR)
	$(WCC64) spur.c $(CFW64) spur.oy
spursub.oy: $(SPURSUB)
	$(WCC64) spursub.c $(CFW64) spursub.oy
thrvar.oy: $(THRVAR)
	$(WCC64) thrvar.c $(CFW64) thrvar.oy
timing.oy: $(TIMING)
	$(WCC64) timing.c $(CFW64) timing.oy
timf2.oy: $(TIMF2)
	$(WCC64) timf2.c $(CFW64) timf2.oy
tune.oy: $(TUNE)
	$(WCC64) tune.c $(CFW64) tune.oy
tx.oy: $(TX)
	$(WCC64) tx.c $(CFW64) tx.oy
tx_graph.oy: $(TX_GRAPH)
	$(WCC64) tx_graph.c $(CFW64) tx_graph.oy
txssb.oy: $(TXSSB)
	$(WCC64) txssb.c $(CFW64) txssb.oy
txtest.oy: $(TXTEST)
	$(WCC64) txtest.c $(CFW64) txtest.oy
txvar.oy:  $(TXVAR)
	$(WCC64) txvar.c $(CFW64) txvar.oy
ui.oy: $(UI)
	$(WCC64) ui.c $(CFW64) ui.oy
uivar.oy:  $(UIVAR)
	$(WCC64) uivar.c $(CFW64) uivar.oy
usb2lpt.oy: $(USB2LPT)
	$(WCC64) usb2lpt.c $(CFW64) usb2lpt.oy
wcw.oy: $(WCW)
	$(WCC64) wcw.c $(CFW64) wcw.oy
wide_graph.oy: $(WIDE_GRAPH)
	$(WCC64) wide_graph.c $(CFW64) wide_graph.oy
wse.oy: $(WSE)
	$(WCC64) wse.c $(CFW64) wse.oy




# -------------------- configure for Windows ------------------------
configure : __Must_type_make_configure.exe__
configure.exe : Makefile configure.ow

	$(WCC) \
-o configure.exe -Wl,-s configure.ow -lws2_32 -lgdi32 -lwinmm

configure.ow: configure.c
	$(WCC) configure.c $(CFW) configure.ow

#--------------------------------------------------------------------
sim : sim2qs1r.exe sim2qs1r sim2excalibur.exe sim2excalibur \
       sim2powersdr.exe sim2powersdr sim2spectravue.exe \
       sim2spectravue sim2perseus.exe sim2perseus

sim2qs1r.exe : sim2qs1r.ow 
	$(WCC) -o sim2qs1r.exe -Wl,-s \
sim2qs1r.ow -lws2_32 -lgdi32 -lwinmm

sim2qs1r : sim2qs1r.ol 
	${CC} @M32@ -o sim2qs1r @ST@ sim2qs1r.ol @LIBRT@ -lm 

sim2excalibur.exe : sim2excalibur.ow
	$(WCC) -o sim2excalibur.exe -Wl,-s \
sim2excalibur.ow -lws2_32 -lgdi32 -lwinmm

sim2excalibur : sim2excalibur.ol
	${CC} @M32@ -o sim2excalibur @ST@ sim2excalibur.ol @LIBRT@ -lm 

sim2powersdr.exe : sim2powersdr.ow
	$(WCC) -o sim2powersdr.exe -Wl,-s \
sim2powersdr.ow -lws2_32 -lgdi32 -lwinmm

sim2powersdr: sim2powersdr.ol
	${CC} @M32@ -o sim2powersdr @ST@ sim2powersdr.ol @LIBRT@ -lm 

sim2spectravue.exe : sim2spectravue.ow
	$(WCC) -o sim2spectravue.exe -Wl,-s \
sim2spectravue.ow -lws2_32 -lgdi32 -lwinmm

sim2spectravue: sim2spectravue.ol
	${CC} @M32@ -o sim2spectravue @ST@ sim2spectravue.ol @LIBRT@ -lm

sim2perseus.exe : sim2perseus.ow
	$(WCC) -o sim2perseus.exe -Wl,-s \
sim2perseus.ow -lws2_32 -lgdi32 -lwinmm

sim2perseus : sim2perseus.ol
	${CC} @M32@ -o sim2perseus @ST@ sim2perseus.ol @LIBRT@ -lm


sim2qs1r.ow: sim2qs1r.c
	$(WCC) sim2qs1r.c $(CFW) sim2qs1r.ow
sim2qs1r.ol : sim2qs1r.c
	$(LCC) sim2qs1r.c $(CFL) sim2qs1r.ol
sim2excalibur.ow: sim2excalibur.c
	$(WCC) sim2excalibur.c $(CFW) sim2excalibur.ow
sim2excalibur.ol : sim2excalibur.c
	$(LCC) sim2excalibur.c $(CFL) sim2excalibur.ol
sim2powersdr.ow: sim2powersdr.c
	$(WCC) sim2powersdr.c $(CFW) sim2powersdr.ow
sim2powersdr.ol : sim2powersdr.c
	$(LCC) sim2powersdr.c $(CFL) sim2powersdr.ol
sim2spectravue.ow: sim2spectravue.c
	$(WCC) sim2spectravue.c $(CFW) sim2spectravue.ow
sim2spectravue.ol : sim2spectravue.c
	$(LCC) sim2spectravue.c $(CFL) sim2spectravue.ol
sim2perseus.ow: sim2perseus.c
	$(WCC) sim2perseus.c $(CFW) sim2perseus.ow
sim2perseus.ol : sim2perseus.c
	$(LCC) sim2perseus.c $(CFL) sim2perseus.ol

test : Makefile
	@echo "Type make test.exe"

test.exe : test.ow
	/usr/bin/i586-mingw32msvc-gcc -o test.exe test.ow 

test.ow: test.c Makefile 
	/usr/bin/i586-mingw32msvc-gcc test.c -g -c -o test.ow





# ---------------------- Linux console specific things ------------------
  ifeq ("@CONSOLE32_OK@", "0")
linrad: Makefile lmain.c
	@echo " "
  ifeq ("@SVGALIB32_OK@", "0")
	@echo " "
	@echo "	To compile for terminal mode you must install"
	@echo "	the 32 bit svgalib package and run configure again."
	@echo " Type ./configure --with-help for info"
	@echo " "
endif
  ifeq ("@ELF32@", "")
	@echo " "
	@echo "|||||||||||||||||||||||||||||||||||||||||||||||||||||||||"
	@echo "|| To compile for LINUX/UNIX you must install nasm,    ||"
	@echo "|| the Netwide Assembler and run configure again.      ||"
	@echo "|| You may get it from the NASM Internet site.         ||"
	@echo "|| The installed version can not generate 32 bit code. ||"
	@echo "|||||||||||||||||||||||||||||||||||||||||||||||||||||||||"
	@echo " "
endif
else
linrad: Makefile lmain.ol ui.ol uivar.ol fft1var.ol lsetad.ol \
wide_graph.ol fft0.ol fft1.ol adtest.ol screenvar.ol sigvar.ol \
baseb_graph.ol afc_graph.ol hires_graph.ol palette.ol gifsave.ol \
calibrate.ol calsub.ol calsub2.ol llsqvar.ol caliq.ol hwaredriver.ol \
llsq.ol sellim.ol selvar.ol mix1.ol fft2var.ol fft3var.ol \
spursub.ol network.ol buf.ol thrvar.ol radar.ol loadusb.ol \
@ASMLIB32@ httpd.ol html_server.ol afedri.ol affinity.ol \
fft3.ol timf2.ol fft1_re.ol powtvar.ol elad.ol airspy.ol \
wcw.ol blank1.ol calvar.ol blnkvar.ol fft2.ol pol_graph.ol modesub.ol \
help.ol afcsub.ol timing.ol mix2.ol spur.ol coherent.ol cohsub.ol eme.ol \
tune.ol txtest.ol mouse.ol freq_control.ol vgatest mousetest morse.ol \
powtim.ol cwspeed.ol coh_osc.ol cwdetect.ol txvar.ol tx.ol pavar.ol pa.ol \
menu.ol screen.ol sdrvar.ol lsys.ol sdr14.ol keyboard_var.ol lvar.ol fm.ol \
meter_graph.ol fonts.ol screensub.ol tx_graph.ol txssb.ol lxsys.ol rxout.ol \
rxin.ol sdrip.ol perseus.ol lsdr.ol wse.ol si570.ol soft66.ol usb2lpt.ol \
excalibur.ol extio.ol rtl2832.ol elektor.ol fcdpp.ol hid.ol pcie9842.ol \
bladerf.ol mirics.ol openhpsdr.ol soundcard.ol oclprogs.ol loadalsa.ol

	${CC} @M32@ -o linrad @ST@ \
	lmain.ol lvar.ol ui.ol lsetad.ol fft1.ol buf.ol radar.ol \
mouse.ol wide_graph.ol fft0.ol adtest.ol hires_graph.ol \
baseb_graph.ol mix2.ol afc_graph.ol hwaredriver.ol \
@ASMLIB32@ \
sellim.ol palette.ol gifsave.ol timing.ol help.ol calibrate.ol \
calsub.ol calsub2.ol llsqvar.ol llsq.ol caliq.ol timf2.ol perseus.ol \
powtim.ol selvar.ol fft2var.ol sigvar.ol screenvar.ol uivar.ol \
fft1var.ol fft3var.ol calvar.ol blnkvar.ol fft1_re.ol lxsys.ol \
powtvar.ol blank1.ol fft2.ol tx.ol elad.ol airspy.ol soundcard.ol \
pol_graph.ol modesub.ol spur.ol cohsub.ol coherent.ol afedri.ol \
eme.ol spursub.ol freq_control.ol fm.ol httpd.ol html_server.ol \
rxin.ol wcw.ol mix1.ol afcsub.ol morse.ol menu.ol fonts.ol rxout.ol \
tune.ol txtest.ol network.ol coh_osc.ol affinity.ol loadusb.ol \
cwspeed.ol sdrvar.ol sdr14.ol keyboard_var.ol thrvar.ol pa.ol \
lsys.ol screen.ol cwdetect.ol tx_graph.ol txssb.ol pavar.ol lsdr.ol \
meter_graph.ol txvar.ol screensub.ol fft3.ol sdrip.ol wse.ol si570.ol \
soft66.ol excalibur.ol usb2lpt.ol extio.ol rtl2832.ol elektor.ol \
fcdpp.ol hid.ol pcie9842.ol bladerf.ol mirics.ol openhpsdr.ol \
oclprogs.ol loadalsa.ol \
@LIBOPENCL32_LD@ @CLFFTPATH32@ \
@SVGA32_LD@ \
@SVGAGL32_LD@ \
-lpthread @LIBRT@ -lm -ldl $(LIBMACOSX)

	@echo " "
	@echo "You may want to disable pulseaudio in Ubuntu with this command:"
	@echo "sudo pasuspender -- ./linrad"
	@echo " "
endif

lvar.ol: lvar.c globdef.h ldef.h lconf.h caldef.h rusage.h thrdef.h
	$(LCC) lvar.c $(CFL) lvar.ol
lsys.ol: lsys.c globdef.h ldef.h lconf.h rusage.h thrdef.h uidef.h \
	keyboard_def.h screendef.h sdrdef.h
	$(LCC) lsys.c @SVGA32_INC@ @SVGAGL32_INC@ $(CFL) lsys.ol
lmain.ol : lmain.c globdef.h ldef.h lconf.h thrdef.h uidef.h screendef.h \
	options.h vernr.h sdrdef.h keyboard_def.h conf.h \
	thrdef.h rusage.h
	$(LCC) lmain.c @SVGA32_INC@ @SVGAGL32_INC@ $(CFL) lmain.ol

# ---------------------- Linux X11 specific things ------------------
ifeq ("@X11_32_ALL_OK@", "0")
xlinrad: Makefile lmain.c
	@echo " "
 ifeq ("@X11_32_OK@", "0")
	@echo "The configure script failed to find libX11"
 endif
 ifeq ("@X11_32_H@", "0")
	@echo "The configure script failed to find .../X11/Xlib.h"
	endif
	@echo " "
	@echo "	To compile for 32 bit X11 you must install the 32 bit"
	@echo " X11 development package and run configure again."
 endif
 ifeq ("@BITS@", "32")
	@echo " Try these commands on 32 bit systems:"
	@echo " Debian: apt-get install libx11-dev"
	@echo " Ubuntu: apt-get install libx11-dev"
	@echo " old Fedora: yum install libX11-devel"
	@echo " Fedora 22 and later: dnf install libX11-devel"
	@echo " Mandriva,Mageia: urpmi libx11_6-devel"
	@echo " Suse: zypper install xorg-x11-libX11-devel"
	@echo " PCLinuxOS: apt-get install libx11-devel" 
	@echo " "
 else
	@echo " All the 32 bit libraries have to be present."
	@echo " Debian: apt-get install libc6-dev-i386 ia32-libs-dev gcc-multilib"
	@echo " Ubuntu: apt-get install libx11-dev libc6-dev-i386 ia32-libs"
	@echo " ------: ln -s /usr/lib/i386-linux-gnu/libX11.so.6.3.0 /usr/lib/i386-linux-gnu/libX11.so"
	@echo " old Fedora: yum install libX11-devel.i686"
	@echo " Very old Fedora: yum install libX11-devel.i586"
	@echo " Fedora 22 and later: dnf install libX11-devel.i686"
	@echo " Mandriva: zyppper install libx11_6-devel. If install fails:"
	@echo " --------: ln -s /usr/lib/libX11.so.6.2.0 /usr/lib/libX11.so and"
	@echo " --------: install lib64x1:1_6-devel to get X11/Xlib.h"
	@echo " "
 endif
else
xlinrad: Makefile xmain.ol ui.ol uivar.ol fft1var.ol lsetad.ol \
wide_graph.ol fft0.ol fft1.ol adtest.ol screenvar.ol sigvar.ol \
baseb_graph.ol afc_graph.ol hires_graph.ol palette.ol gifsave.ol \
calibrate.ol calsub.ol calsub2.ol llsqvar.ol caliq.ol hwaredriver.ol \
llsq.ol sellim.ol selvar.ol mix1.ol fft2var.ol fft3var.ol elad.ol \
spursub.ol network.ol buf.ol thrvar.ol radar.ol loadusb.ol \
@ASMLIB32@ httpd.ol html_server.ol afedri.ol affinity.ol \
fft3.ol timf2.ol fft1_re.ol powtvar.ol airspy.ol soundcard.ol \
wcw.ol blank1.ol calvar.ol blnkvar.ol fft2.ol pol_graph.ol modesub.ol \
help.ol afcsub.ol timing.ol mix2.ol spur.ol coherent.ol cohsub.ol eme.ol \
tune.ol txtest.ol mouse.ol freq_control.ol morse.ol lxsys.ol lvar.ol \
powtim.ol cwspeed.ol coh_osc.ol cwdetect.ol txvar.ol tx.ol pavar.ol pa.ol \
menu.ol screen.ol sdrvar.ol xsys.ol sdr14.ol keyboard_var.ol xvar.ol fm.ol \
meter_graph.ol fonts.ol screensub.ol tx_graph.ol txssb.ol wxsys.ol rxout.ol \
rxin.ol sdrip.ol perseus.ol lsdr.ol wse.ol si570.ol soft66.ol usb2lpt.ol \
excalibur.ol extio.ol rtl2832.ol elektor.ol fcdpp.ol hid.ol pcie9842.ol \
bladerf.ol mirics.ol openhpsdr.ol oclprogs.ol loadalsa.ol


	${CC} @M32@ -o xlinrad @ST@ \
xmain.ol xvar.ol ui.ol lsetad.ol fft1.ol buf.ol lvar.ol radar.ol \
mouse.ol wide_graph.ol fft0.ol adtest.ol hires_graph.ol elad.ol \
baseb_graph.ol mix2.ol afc_graph.ol hwaredriver.ol affinity.ol \
sellim.ol palette.ol gifsave.ol timing.ol help.ol calibrate.ol \
calsub.ol calsub2.ol llsqvar.ol llsq.ol caliq.ol timf2.ol tx.ol \
powtim.ol selvar.ol fft2var.ol sigvar.ol screenvar.ol uivar.ol \
fft1var.ol fft3var.ol calvar.ol blnkvar.ol fft1_re.ol lxsys.ol \
powtvar.ol blank1.ol fft2.ol sdrip.ol loadusb.ol airspy.ol \
pol_graph.ol modesub.ol spur.ol cohsub.ol coherent.ol afedri.ol \
eme.ol spursub.ol freq_control.ol perseus.ol httpd.ol html_server.ol \
@ASMLIB32@ \
rxin.ol wcw.ol mix1.ol afcsub.ol morse.ol menu.ol fonts.ol rxout.ol \
tune.ol txtest.ol network.ol coh_osc.ol fm.ol soundcard.ol \
cwspeed.ol sdrvar.ol sdr14.ol keyboard_var.ol thrvar.ol pa.ol \
xsys.ol screen.ol cwdetect.ol tx_graph.ol txssb.ol pavar.ol lsdr.ol \
txvar.ol screensub.ol fft3.ol wxsys.ol meter_graph.ol wse.ol si570.ol \
extio.ol soft66.ol excalibur.ol usb2lpt.ol rtl2832.ol elektor.ol \
fcdpp.ol hid.ol pcie9842.ol bladerf.ol mirics.ol openhpsdr.ol \
oclprogs.ol loadalsa.ol \
@LIBOPENCL32_LD@ @CLFFTPATH32@ \
@LIBXEXT32_LD@ \
@X11_32_LD@ \
-lpthread @LIBRT@ -lm -ldl $(LIBMACOSX)

	@echo " "
	@echo "You may want to disable pulseaudio in Ubuntu with this command:"
	@echo "sudo pasuspender -- ./xlinrad"
	@echo " "
endif

wxsys.ol: $(WXSYS)
	$(LCC) wxsys.c $(CFL) wxsys.ol
xvar.ol: xvar.c rusage.h thrdef.h globdef.h lconf.h xdef.h ldef.h
	$(LCC) xvar.c @X11_32_INC@ $(CFL) xvar.ol
xsys.ol: xsys.c rusage.h thrdef.h globdef.h uidef.h screendef.h xdef.h \
	keyboard_def.h lconf.h vernr.h sdrdef.h options.h
	$(LCC) xsys.c @X11_32_INC@ $(CFL) xsys.ol
xmain.ol : xmain.c globdef.h rusage.h thrdef.h uidef.h screendef.h \
	vernr.h options.h keyboard_def.h lconf.h xdef.h ldef.h conf.h
	$(LCC) xmain.c @X11_32_INC@ $(CFL) xmain.ol


# ---------------------- Linux with the Linux framebuffer device ------------------
ifeq ("@SVGALIB32_OK@", "0")
flinrad: 
	@echo " "
	@echo "	To compile for the framebuffer device you must install"
	@echo "	the 32 bit svgalib package and run configure again."
	@echo "	It does not matter that svgalib is broken."
	@echo "	It is used for mouse only."
	@echo "	Type ./configure --with-help for info."
	@echo " "
else

flinrad: Makefile fmain.ol ui.ol uivar.ol fft1var.ol lsetad.ol \
wide_graph.ol fft0.ol fft1.ol adtest.ol screenvar.ol sigvar.ol \
baseb_graph.ol afc_graph.ol hires_graph.ol palette.ol gifsave.ol \
calibrate.ol calsub.ol calsub2.ol llsqvar.ol caliq.ol hwaredriver.ol \
llsq.ol sellim.ol selvar.ol mix1.ol fft2var.ol fft3var.ol afedri.ol \
spursub.ol network.ol buf.ol thrvar.ol radar.ol httpd.ol html_server.ol \
@ASMLIB32@ loadusb.ol \
fft3.ol timf2.ol fft1_re.ol powtvar.ol affinity.ol elad.ol airspy.ol \
wcw.ol blank1.ol calvar.ol blnkvar.ol fft2.ol pol_graph.ol modesub.ol \
help.ol afcsub.ol timing.ol mix2.ol spur.ol coherent.ol cohsub.ol eme.ol \
tune.ol txtest.ol mouse.ol freq_control.ol vgatest mousetest morse.ol \
powtim.ol cwspeed.ol coh_osc.ol cwdetect.ol txvar.ol tx.ol pavar.ol pa.ol \
menu.ol screen.ol sdrvar.ol fsys.ol sdr14.ol keyboard_var.ol fvar.ol fm.ol \
meter_graph.ol fonts.ol screensub.ol tx_graph.ol txssb.ol lxsys.ol rxout.ol \
rxin.ol sdrip.ol perseus.ol lsdr.ol wse.ol si570.ol soft66.ol usb2lpt.ol \
excalibur.ol extio.ol rtl2832.ol elektor.ol fcdpp.ol hid.ol pcie9842.ol \
bladerf.ol mirics.ol openhpsdr.ol soundcard.ol oclprogs.ol loadalsa.ol

	${CC} @M32@ -o flinrad @ST@ \
	fmain.ol fvar.ol ui.ol lsetad.ol fft1.ol buf.ol radar.ol \
mouse.ol wide_graph.ol fft0.ol adtest.ol hires_graph.ol \
baseb_graph.ol mix2.ol afc_graph.ol hwaredriver.ol \
@ASMLIB32@ \
sellim.ol palette.ol gifsave.ol timing.ol help.ol calibrate.ol \
calsub.ol calsub2.ol llsqvar.ol llsq.ol caliq.ol timf2.ol perseus.ol \
powtim.ol selvar.ol fft2var.ol sigvar.ol screenvar.ol uivar.ol \
fft1var.ol fft3var.ol calvar.ol blnkvar.ol fft1_re.ol lxsys.ol \
powtvar.ol blank1.ol fft2.ol tx.ol loadusb.ol airspy.ol soundcard.ol \
pol_graph.ol modesub.ol spur.ol cohsub.ol coherent.ol elad.ol \
eme.ol spursub.ol freq_control.ol fm.ol afedri.ol affinity.ol \
rxin.ol wcw.ol mix1.ol afcsub.ol morse.ol menu.ol fonts.ol rxout.ol \
tune.ol txtest.ol network.ol coh_osc.ol httpd.ol html_server.ol \
cwspeed.ol sdrvar.ol sdr14.ol keyboard_var.ol thrvar.ol pa.ol \
fsys.ol screen.ol cwdetect.ol tx_graph.ol txssb.ol pavar.ol lsdr.ol \
meter_graph.ol txvar.ol screensub.ol fft3.ol sdrip.ol wse.ol si570.ol \
soft66.ol excalibur.ol usb2lpt.ol extio.ol rtl2832.ol elektor.ol \
fcdpp.ol hid.ol pcie9842.ol bladerf.ol mirics.ol openhpsdr.ol \
oclprogs.ol loadalsa.ol \
@LIBOPENCL32_LD@ @CLFFTPATH32@ \
@SVGA32_LD@ \
@SVGAGL32_LD@ \
-lpthread @LIBRT@ -lm -ldl $(LIBMACOSX)

	@echo " "
	@echo "You may want to disable pulseaudio in Ubuntu with this command:"
	@echo "sudo pasuspender -- ./flinrad"
	@echo " "
endif

fvar.ol: fvar.c globdef.h fdef.h lconf.h caldef.h rusage.h thrdef.h
	$(LCC) fvar.c $(CFL) fvar.ol
fsys.ol: fsys.c globdef.h fdef.h lconf.h rusage.h thrdef.h uidef.h \
	keyboard_def.h screendef.h sdrdef.h
	$(LCC) fsys.c @SVGA32_INC@ @SVGAGL32_INC@ $(CFL) fsys.ol
fmain.ol : fmain.c globdef.h ldef.h lconf.h thrdef.h uidef.h screendef.h \
	options.h vernr.h sdrdef.h keyboard_def.h conf.h \
	thrdef.h rusage.h
	$(LCC) fmain.c @SVGA32_INC@ @SVGAGL32_INC@ $(CFL) fmain.ol


#--------------------------------------------------------------------------

lsetad.ol : lsetad.c globdef.h uidef.h sigdef.h fft1def.h fft2def.h \
	fft3def.h screendef.h sdrdef.h vernr.h thrdef.h conf.h \
	hwaredef.h rusage.h ldef.h txdef.h options.h keyboard_def.h \
	loadalsa.h timing_setup.c input_speed.c
	$(LCC) lsetad.c -DALSA_LIBNAME=\"@ALSA32_LD@\" $(CFL) lsetad.ol

split.ol: split.s
	$(NASML) split.s -o split.ol
fft2mmxa.ol: fft2mmxa.s
	$(NASML) fft2mmxa.s -o fft2mmxa.ol
fft2mmxb.ol: fft2mmxb.s
	$(NASML) fft2mmxb.s -o fft2mmxb.ol
fft2mmxc.ol: fft2mmxc.s
	$(NASML) fft2mmxc.s -o fft2mmxc.ol
fftasm.ol: fftasm.s
	$(NASML) fftasm.s -o fftasm.ol
getiq.ol: getiq.s
	$(NASML) getiq.s -o getiq.ol
simdasm.ol: simdasm.s
	$(NASML) simdasm.s -o simdasm.ol
hware.ol: hware.s
	$(NASML) hware.s -o hware.ol

lxsys.ol: lxsys.c rusage.h thrdef.h globdef.h uidef.h lconf.h xdef.h ldef.h \
	hwaredef.h options.h sdrdef.h
	$(LCC) lxsys.c $(CFL) lxsys.ol
lsdr.ol : $(LSDR)
	$(LCC) lsdr.c $(CFL) lsdr.ol



adtest.ol : $(ADTEST)
	$(LCC) adtest.c $(CFL) adtest.ol
afc_graph.ol : $(AFC_GRAPH)
	$(LCC) afc_graph.c $(CFL) afc_graph.ol
afcsub.ol : $(AFCSUB)
	$(LCC) afcsub.c $(CFL) afcsub.ol
afedri.ol: Makefile $(AFEDRI)
	$(LCC) afedri.c $(CFL) afedri.ol
affinity.ol: Makefile $(AFFINITY)
	$(LCC) affinity.c $(CFL) affinity.ol
airspy.ol: Makefile $(AIRSPY)
	$(LCC) airspy.c -DAIRSPY_LIBNAME=\"@LIBAIRSPY32_LD@\" $(CFL) airspy.ol
baseb_graph.ol : $(BASEB_GRAPH)
	$(LCC) baseb_graph.c $(CFL) baseb_graph.ol
bladerf.ol: Makefile $(BLADERF)
	$(LCC) bladerf.c -DBLADERF_LIBNAME=\"@LIBBLADERF32_LD@\" \
	$(CFL) bladerf.ol
blank1.ol : $(BLANK1)
	$(LCC) blank1.c $(CFL) blank1.ol
blnkvar.ol : $(BLNKVAR)
	$(LCC) blnkvar.c $(CFL) blnkvar.ol
buf.ol : $(BUF)
	$(LCC) buf.c $(CFL) buf.ol
calibrate.ol : $(CALIBRATE)
	$(LCC) calibrate.c $(CFL) calibrate.ol
caliq.ol : $(CALIQ)
	$(LCC) caliq.c $(CFL) caliq.ol
calsub.ol : $(CALSUB)
	$(LCC) calsub.c $(CFL) calsub.ol
calsub2.ol : $(CALSUB2)
	$(LCC) calsub2.c $(CFL) calsub2.ol
calvar.ol : $(CALVAR)
	$(LCC) calvar.c $(CFL) calvar.ol
coh_osc.ol : $(COH_OSC)
	$(LCC) coh_osc.c $(CFL) coh_osc.ol
coherent.ol : $(COHERENT)
	$(LCC) coherent.c $(CFL) coherent.ol
cohsub.ol : $(COHSUB)
	$(LCC) cohsub.c $(CFL) cohsub.ol
csplit.ol : $(CSPLIT)
	$(LCC) csplit.c $(CFL) csplit.ol
cwspeed.ol : $(CWSPEED)
	$(LCC) cwspeed.c $(CFL) cwspeed.ol
cwdetect.ol : $(CWDETECT)
	$(LCC) cwdetect.c $(CFL) cwdetect.ol
elad.ol: Makefile $(ELAD)
	$(LCC) elad.c -DFDMS1_LIBNAME=\"@LIBFDMS1_32_LD@\" $(CFL) elad.ol
elektor.ol: Makefile $(ELEKTOR)
	$(LCC) elektor.c $(CFL) elektor.ol
eme.ol : $(EME)
	$(LCC) eme.c $(CFL) eme.ol
excalibur.ol : $(EXCALIBUR)
	$(LCC) excalibur.c $(CFL) excalibur.ol
extio.ol : $(EXTIO)
	$(LCC) extio.c $(CFL) extio.ol
fcdpp.ol: Makefile $(FCDPP)
	$(LCC) fcdpp.c $(CFL) fcdpp.ol
fft0.ol : $(FFT0)
	$(LCC) fft0.c $(CFL) fft0.ol
fft1.ol : $(FFT1)
	$(LCC) fft1.c $(CFL) fft1.ol
fft1_re.ol : $(FFT1_RE)
	$(LCC) fft1_re.c $(CFL) fft1_re.ol
fft1var.ol : $(FFT1VAR)
	$(LCC) fft1var.c $(CFL) fft1var.ol
fft2.ol : $(FFT2)
	$(LCC) fft2.c $(CFL) fft2.ol
fft2var.ol : $(FFT2VAR)
	$(LCC) fft2var.c $(CFL) fft2var.ol
fft3.ol : $(FFT3)
	$(LCC) fft3.c $(CFL) fft3.ol
fft3var.ol : $(FFT3VAR)
	$(LCC) fft3var.c $(CFL) fft3var.ol
fm.ol : $(FM) 
	$(LCC) fm.c $(CFL) fm.ol
fonts.ol : $(FONTS)
	$(LCC) fonts.c $(CFL) fonts.ol
freq_control.ol : $(FREQ_CONTROL) @DEPS2@
	$(LCC) freq_control.c $(CFL) freq_control.ol
gifsave.ol : $(GIFSAVE)
	$(LCC) gifsave.c $(CFL) gifsave.ol
help.ol : $(HELP)
	$(LCC) help.c $(CFL) help.ol
ifeq ($(OS), Darwin)
hid.ol: $(HID)
	$(LCC) hidmac.c $(CFL) hid.ol -Wno-unused-parameter
else
hid.ol: $(HID)
	$(LCC) hid.c -DUDEV_LIBNAME=\"@LIBUDEV_32_LD@\" $(CFL) hid.ol
endif
hires_graph.ol : $(HIRES_GRAPH)
	$(LCC) hires_graph.c $(CFL) hires_graph.ol
html_server.ol: Makefile $(HTML_SERVER)
	$(LCC) html_server.c $(CFL) html_server.ol
httpd.ol: $(HTTPD)
	$(LCC) httpd.c $(CFL) httpd.ol
hwaredriver.ol : $(HWAREDRIVER) @LDEPS1@ lconf.h ldef.h
	$(LCC) hwaredriver.c $(CFL) hwaredriver.ol
keyboard_var.ol : $(KEYBOARD_VAR)
	$(LCC) keyboard_var.c $(CFL) keyboard_var.ol
llsq.ol : $(LLSQ)
	$(LCC) llsq.c $(CFL) llsq.ol
llsqvar.ol : $(LLSQVAR)
	$(LCC) llsqvar.c $(CFL) llsqvar.ol
loadusb.ol : $(LOADUSB)
	$(LCC) loadusb.c -DFTDI_LIBNAME=\"@LIBFTDI32_LD@\" \
	-DLIBUSB1_LIBNAME=\"@LIBUSB1_32_LD@\" \
	-DLIBUSB0_LIBNAME=\"@LIBUSB32_LD@\" $(CFL) loadusb.ol
loadalsa.ol: $(LOADALSA)
	$(LCC) loadalsa.c -DALSA_LIBNAME=\"@ALSA32_LD@\" $(CFL) loadalsa.ol
menu.ol : $(MENU)
	$(LCC) menu.c $(CFL) menu.ol
meter_graph.ol : $(METER_GRAPH)
	$(LCC) meter_graph.c $(CFL) meter_graph.ol
mix1.ol : $(MIX1)
	$(LCC) mix1.c $(CFL) mix1.ol
mix2.ol : $(MIX2)
	$(LCC) mix2.c $(CFL) mix2.ol
mirics.ol: Makefile $(MIRICS)
	$(LCC) mirics.c -DMIRISDR_LIBNAME=\"@LIBMIRISDR32_LD@\" $(CFL) mirics.ol
morse.ol : $(MORSE)
	$(LCC) morse.c $(CFL) morse.ol
modesub.ol : $(MODESUB)
	$(LCC) modesub.c $(CFL) modesub.ol
mouse.ol : $(MOUSE)
	$(LCC) mouse.c $(CFL) mouse.ol
network.ol : $(NETWORK) rusage.h
	$(LCC) network.c $(CFL) network.ol
oclprogs.ol : $(OCLPROGS)
	$(LCC) oclprogs.c @OCLPROGS32@ @CLFFTINC@ -DLIR_OK=0 $(CFLOCL) oclprogs.ol
pa.ol : $(PA)
	$(LCC) pa.c -DPA_LIBNAME=\"@PORTAUDIO32_LD@\" $(CFL) pa.ol
openhpsdr.ol: Makefile $(OPENHPSDR)
	$(LCC) openhpsdr.c $(CFL) openhpsdr.ol
pavar.ol : $(PAVAR)
	$(LCC) pavar.c $(CFL) pavar.ol
palette.ol : $(PALETTE)
	$(LCC) palette.c $(CFL) palette.ol
pcie9842.ol: Makefile $(PCIE9842)
	$(LCC) pcie9842.c -DPCI_LIBNAME=\"@LIBWD_DASK_32_LD@\" $(CFL) pcie9842.ol
perseus.ol : $(PERSEUS)
	$(LCC) perseus.c -DPERSEUS_LIBNAME=\"@PERSEUS32_LD@\" $(CFL) perseus.ol
pol_graph.ol : $(POL_GRAPH)
	$(LCC) pol_graph.c $(CFL) pol_graph.ol
powtim.ol : $(POWTIM)
	$(LCC) powtim.c $(CFL) powtim.ol
powtvar.ol : $(POWTVAR)
	$(LCC) powtvar.c $(CFL) powtvar.ol
radar.ol : $(RADAR)
	$(LCC) radar.c $(CFL) radar.ol
rtl2832.ol : $(RTL2832)
	$(LCC) rtl2832.c -DRTLSDR_LIBNAME=\"@LIBRTLSDR32_LD@\" $(CFL) rtl2832.ol
rxin.ol : $(RXIN)
	$(LCC) rxin.c $(CFL) rxin.ol
rxout.ol : $(RXOUT)
	$(LCC) rxout.c $(CFL) rxout.ol
screen.ol : $(SCREEN)
	$(LCC) screen.c $(CFL) screen.ol
screenvar.ol : $(SCREENVAR)
	$(LCC) screenvar.c $(CFL) screenvar.ol
screensub.ol : $(SCREENSUB)
	$(LCC) screensub.c $(CFL) screensub.ol
sdr14.ol : $(SDR14)
	$(LCC) sdr14.c $(CFL) sdr14.ol
sdrip.ol : $(SDRIP)
	$(LCC) sdrip.c $(CFL) sdrip.ol
sdrvar.ol : $(SDRVAR)
	$(LCC) sdrvar.c $(CFL) sdrvar.ol
sellim.ol : $(SELLIM)
	$(LCC) sellim.c $(CFL) sellim.ol
selvar.ol : $(SELVAR)
	$(LCC) selvar.c $(CFL) selvar.ol
si570.ol : $(SI570)
	$(LCC) si570.c -DLIBUSB1_LIBNAME=\"@LIBUSB1_32_LD@\" \
	-DLIBUSB0_LIBNAME=\"@LIBUSB32_LD@\" $(CFL) si570.ol
sigvar.ol : $(SIGVAR)
	$(LCC) sigvar.c $(CFL) sigvar.ol
soft66.ol : $(SOFT66)
	$(LCC) soft66.c -DSOFT66_LIBNAME=\"@SOFT66_32_LD@\" $(CFL) soft66.ol
soundcard.ol: $(SOUNDCARD)
	$(LCC) soundcard.c $(CFL) soundcard.ol
spur.ol : $(SPUR)
	$(LCC) spur.c $(CFL) spur.ol
spursub.ol : $(SPURSUB)
	$(LCC) spursub.c $(CFL) spursub.ol
thrvar.ol : $(THRVAR)
	$(LCC) thrvar.c $(CFL) thrvar.ol
timing.ol : $(TIMING)
	$(LCC) timing.c $(CFL) timing.ol
timf2.ol : $(TIMF2)
	$(LCC) timf2.c $(CFL) timf2.ol
tune.ol : $(TUNE)
	$(LCC) tune.c $(CFL) tune.ol
tx.ol: $(TX)
	$(LCC) tx.c $(CFL) tx.ol
tx_graph.ol: $(TX_GRAPH)
	$(LCC) tx_graph.c $(CFL) tx_graph.ol
txssb.ol: $(TXSSB)
	$(LCC) txssb.c $(CFL) txssb.ol
txtest.ol : $(TXTEST)
	$(LCC) txtest.c $(CFL) txtest.ol
txvar.ol: $(TXVAR)
	$(LCC) txvar.c $(CFL) txvar.ol
ui.ol : $(UI) lconf.h xdef.h ldef.h
	$(LCC) ui.c $(CFL) ui.ol
uivar.ol: $(UIVAR)
	$(LCC) uivar.c $(CFL) uivar.ol
usb2lpt.ol: $(USB2LPT)
	$(LCC) usb2lpt.c -DLIBUSB1_LIBNAME=\"@LIBUSB1_32_LD@\" \
	-DLIBUSB0_LIBNAME=\"@LIBUSB32_LD@\" $(CFL) usb2lpt.ol
wcw.ol : $(WCW)
	$(LCC) wcw.c $(CFL) wcw.ol
wide_graph.ol : $(WIDE_GRAPH)
	$(LCC) wide_graph.c $(CFL) wide_graph.ol
wse.ol : $(WSE)
	$(LCC) wse.c -DLIBUSB1_LIBNAME=\"@LIBUSB1_32_LD@\" \
	-DLIBUSB0_LIBNAME=\"@LIBUSB32_LD@\" $(CFL) wse.ol


# ---------------------- Linux console specific things ------------------
  ifeq ("@SVGALIB64_OK@", "0")
linrad64: Makefile lmain.c
  ifeq ("@ELF64@", "")
	@echo " "
	@echo "|||||||||||||||||||||||||||||||||||||||||||||||||||||||||"
	@echo "|| To compile for LINUX/UNIX you must install nasm,    ||"
	@echo "|| the Netwide Assembler and run configure again.      ||"
	@echo "|| You may get it from the NASM Internet site.         ||"
	@echo "|| The installed version can not generate 64 bit code. ||"
	@echo "|||||||||||||||||||||||||||||||||||||||||||||||||||||||||"
	@echo " "
  else
	@echo " "
	@echo "	To compile for terminal mode you must install"
	@echo "	the 64 bit svgalib package and run configure again."
	@echo " "
  endif
else
linrad64: Makefile lmain.om ui.om uivar.om fft1var.om lsetad.om \
wide_graph.om fft0.om fft1.om adtest.om screenvar.om sigvar.om \
baseb_graph.om afc_graph.om hires_graph.om palette.om gifsave.om \
calibrate.om calsub.om calsub2.om llsqvar.om caliq.om hwaredriver.om \
llsq.om sellim.om selvar.om mix1.om fft2var.om fft3var.om afedri.om \
spursub.om network.om buf.om thrvar.om radar.om httpd.om html_server.om \
@ASMLIB64@ loadusb.om \
fft3.om timf2.om fft1_re.om powtvar.om affinity.om elad.om airspy.om \
wcw.om blank1.om calvar.om blnkvar.om fft2.om pol_graph.om modesub.om \
help.om afcsub.om timing.om mix2.om spur.om coherent.om cohsub.om eme.om \
tune.om txtest.om mouse.om freq_control.om vgatest mousetest morse.om \
powtim.om cwspeed.om coh_osc.om cwdetect.om txvar.om tx.om pavar.om pa.om \
menu.om screen.om sdrvar.om lsys.om sdr14.om keyboard_var.om lvar.om fm.om \
meter_graph.om fonts.om screensub.om tx_graph.om txssb.om lxsys.om \
rxout.om rxin.om sdrip.om perseus.om lsdr.om wse.om si570.om soft66.om \
usb2lpt.om excalibur.om extio.om rtl2832.om elektor.om fcdpp.om hid.om \
pcie9842.om bladerf.om mirics.om openhpsdr.om soundcard.om oclprogs.om \
loadalsa.om

	${CC} -m64 -o linrad64 @ST@ \
	lmain.om lvar.om ui.om lsetad.om fft1.om buf.om radar.om \
mouse.om wide_graph.om fft0.om adtest.om hires_graph.om elad.om \
baseb_graph.om mix2.om afc_graph.om hwaredriver.om loadusb.om \
sellim.om palette.om gifsave.om timing.om help.om calibrate.om \
calsub.om calsub2.om llsqvar.om llsq.om caliq.om timf2.om sdrip.om \
powtim.om selvar.om fft2var.om sigvar.om screenvar.om uivar.om \
fft1var.om fft3var.om calvar.om blnkvar.om fft1_re.om lxsys.om \
powtvar.om blank1.om fft2.om tx.om afedri.om airspy.om \
pol_graph.om modesub.om spur.om cohsub.om coherent.om affinity.om \
eme.om spursub.om freq_control.om fm.om httpd.om html_server.om \
@ASMLIB64@ \
rxin.om wcw.om mix1.om afcsub.om morse.om menu.om fonts.om rxout.om \
tune.om txtest.om network.om coh_osc.om soundcard.om \
cwspeed.om sdrvar.om sdr14.om keyboard_var.om thrvar.om pa.om \
lsys.om screen.om cwdetect.om tx_graph.om txssb.om pavar.om lsdr.om \
meter_graph.om txvar.om screensub.om fft3.om perseus.om wse.om si570.om \
soft66.om usb2lpt.om excalibur.om extio.om rtl2832.om elektor.om \
fcdpp.om hid.om pcie9842.om bladerf.om mirics.om openhpsdr.om \
oclprogs.om loadalsa.om \
@LIBOPENCL64_LD@ @CLFFTPATH64@ \
@SVGA64_LD@ \
@SVGAGL64_LD@ \
-lpthread @LIBRT@ -lm -ldl $(LIBMACOSX)

	@echo " "
	@echo "You may want to disable pulseaudio in Ubuntu with this command:"
	@echo "sudo pasuspender -- ./linrad64"
	@echo " "
endif

lvar.om: lvar.c globdef.h ldef.h lconf.h caldef.h rusage.h thrdef.h
	$(LCC) lvar.c $(CFL64) lvar.om
lsys.om: lsys.c globdef.h ldef.h lconf.h rusage.h thrdef.h uidef.h \
	keyboard_def.h screendef.h sdrdef.h
	$(LCC) lsys.c @SVGA64_INC@ @SVGAGL64_INC@ $(CFL64) lsys.om
lmain.om : lmain.c globdef.h ldef.h lconf.h thrdef.h uidef.h screendef.h \
	options.h vernr.h sdrdef.h keyboard_def.h conf.h \
	thrdef.h rusage.h
	$(LCC) lmain.c @SVGA64_INC@ @SVGAGL64_INC@ $(CFL64) lmain.om


# ---------------------- Linux X11 specific things ------------------
  ifeq ("@X11_64_ALL_OK@", "0")
xlinrad64: Makefile lmain.c
	@echo " "
  ifeq ("@BITS@", "64")
	@echo " "
  ifeq ("@X11_64_OK@", "0")
	@echo "The configure script failed to find libX11"
  endif
  ifeq ("@X11_64_H@", "0")
	@echo "The configure script failed to find .../X11/Xlib.h"
  endif
	@echo "	To compile for X11 you must install"
	@echo "	the X11 development package and run configure again."
	@echo " Debian, Ubuntu: apt-get install libx11-dev"
	@echo " old Fedora: yum install libX11-devel"
	@echo " Fedora 22 and later: dnf install libX11-devel"
	@echo " Mandriva: urpmi lib64x11_6-devel"
	@echo " Suse: zypper install xorg-x11-libX11-devel"
	@echo " "
  else
	@echo " Can not cross compile to 64 bit X11 on a 32 bit platform"
	@echo " "
  endif  
else
xlinrad64: Makefile xmain.om ui.om uivar.om fft1var.om lsetad.om \
wide_graph.om fft0.om fft1.om adtest.om screenvar.om sigvar.om \
baseb_graph.om afc_graph.om hires_graph.om palette.om gifsave.om \
calibrate.om calsub.om calsub2.om llsqvar.om caliq.om hwaredriver.om \
llsq.om sellim.om selvar.om mix1.om fft2var.om fft3var.om afedri.om \
spursub.om network.om buf.om thrvar.om radar.om httpd.om html_server.om \
@ASMLIB64@ loadusb.om \
fft3.om timf2.om fft1_re.om powtvar.om affinity.om elad.om airspy.om \
wcw.om blank1.om calvar.om blnkvar.om fft2.om pol_graph.om modesub.om \
help.om afcsub.om timing.om mix2.om spur.om coherent.om cohsub.om eme.om \
tune.om txtest.om mouse.om freq_control.om morse.om lxsys.om lvar.om \
powtim.om cwspeed.om coh_osc.om cwdetect.om txvar.om tx.om pavar.om pa.om \
menu.om screen.om sdrvar.om xsys.om sdr14.om keyboard_var.om xvar.om fm.om \
meter_graph.om fonts.om screensub.om tx_graph.om txssb.om wxsys.om \
rxin.om perseus.om rxout.om sdrip.om lsdr.om wse.om si570.om soft66.om \
usb2lpt.om excalibur.om extio.om rtl2832.om elektor.om fcdpp.om hid.om \
pcie9842.om bladerf.om mirics.om openhpsdr.om soundcard.om oclprogs.om \
loadalsa.om

	${CC} -m64 -o xlinrad64 @ST@ \
xmain.om xvar.om ui.om lsetad.om fft1.om buf.om lvar.om radar.om \
mouse.om wide_graph.om fft0.om adtest.om hires_graph.om elad.om \
baseb_graph.om mix2.om afc_graph.om hwaredriver.om loadusb.om \
sellim.om palette.om gifsave.om timing.om help.om calibrate.om \
calsub.om calsub2.om llsqvar.om llsq.om caliq.om timf2.om tx.om \
powtim.om selvar.om fft2var.om sigvar.om screenvar.om uivar.om \
fft1var.om fft3var.om calvar.om blnkvar.om fft1_re.om lxsys.om \
powtvar.om blank1.om fft2.om sdrip.om afedri.om airspy.om \
pol_graph.om modesub.om spur.om cohsub.om coherent.om affinity.om \
eme.om spursub.om freq_control.om lsdr.om httpd.om html_server.om \
@ASMLIB64@ \
rxin.om wcw.om mix1.om afcsub.om morse.om menu.om fonts.om rxout.om \
tune.om txtest.om network.om coh_osc.om fm.om soundcard.om \
cwspeed.om sdrvar.om sdr14.om keyboard_var.om thrvar.om pa.om \
xsys.om screen.om cwdetect.om tx_graph.om txssb.om pavar.om \
txvar.om screensub.om fft3.om wxsys.om meter_graph.om  wse.om si570.om \
soft66.om perseus.om usb2lpt.om excalibur.om extio.om rtl2832.om \
elektor.om fcdpp.om hid.om pcie9842.om bladerf.om mirics.om openhpsdr.om \
oclprogs.om loadalsa.om \
@LIBOPENCL64_LD@ @CLFFTPATH64@ \
@LIBXEXT64_LD@ \
@X11_64_LD@ \
-lpthread @LIBRT@ -lm -ldl $(LIBMACOSX)

	@echo " "
	@echo "You may want to disable pulseaudio in Ubuntu with this command:"
	@echo "sudo pasuspender -- ./xlinrad64"
	@echo " "
endif

wxsys.om: $(WXSYS)
	$(LCC) wxsys.c $(CFL64) wxsys.om
xvar.om: xvar.c rusage.h thrdef.h globdef.h lconf.h xdef.h ldef.h
	$(LCC) xvar.c @X11_32_INC@ $(CFL64) xvar.om
xsys.om: xsys.c rusage.h thrdef.h globdef.h uidef.h screendef.h xdef.h \
	keyboard_def.h lconf.h vernr.h sdrdef.h options.h
	$(LCC) xsys.c @X11_32_INC@ $(CFL64) xsys.om
xmain.om : xmain.c rusage.h thrdef.h globdef.h uidef.h screendef.h \
	vernr.h options.h keyboard_def.h lconf.h xdef.h ldef.h conf.h
	$(LCC) xmain.c @X11_32_INC@ $(CFL64) xmain.om
#--------------------------------------------------------------------------

ifeq ("@SVGALIB64_OK@", "0")
flinrad64: 
	@echo " "
	@echo "	To compile for the framebuffer device you must install"
	@echo "	the 64 bit svgalib package and run configure again."
	@echo "	It does not matter that svgalib is broken."
	@echo "	It is used for mouse only."
	@echo "	Type ./configure --with-help for info."
	@echo " "
else
flinrad64: Makefile fmain.om ui.om uivar.om fft1var.om lsetad.om \
wide_graph.om fft0.om fft1.om adtest.om screenvar.om sigvar.om \
baseb_graph.om afc_graph.om hires_graph.om palette.om gifsave.om \
calibrate.om calsub.om calsub2.om llsqvar.om caliq.om hwaredriver.om \
llsq.om sellim.om selvar.om mix1.om fft2var.om fft3var.om afedri.om \
spursub.om network.om buf.om thrvar.om radar.om httpd.om html_server.om \
@ASMLIB64@ \
fft3.om timf2.om fft1_re.om powtvar.om affinity.om airspy.om \
wcw.om blank1.om calvar.om blnkvar.om fft2.om pol_graph.om modesub.om \
help.om afcsub.om timing.om mix2.om spur.om coherent.om cohsub.om eme.om \
tune.om txtest.om mouse.om freq_control.om morse.om lxsys.om elad.om \
powtim.om cwspeed.om coh_osc.om cwdetect.om txvar.om tx.om pavar.om pa.om \
menu.om screen.om sdrvar.om fsys.om sdr14.om keyboard_var.om fvar.om fm.om \
meter_graph.om fonts.om screensub.om tx_graph.om txssb.om loadusb.om \
rxin.om perseus.om rxout.om sdrip.om lsdr.om wse.om si570.om soft66.om \
usb2lpt.om excalibur.om extio.om rtl2832.om elektor.om fcdpp.om hid.om \
pcie9842.om bladerf.om mirics.om openhpsdr.om soundcard.om oclprogs.om \
loadalsa.om


	${CC} -m64 -o flinrad64 @ST@ \
fmain.om fvar.om ui.om lsetad.om fft1.om buf.om radar.om elad.om \
mouse.om wide_graph.om fft0.om adtest.om hires_graph.om \
baseb_graph.om mix2.om afc_graph.om hwaredriver.om afedri.om \
sellim.om palette.om gifsave.om timing.om help.om calibrate.om \
calsub.om calsub2.om llsqvar.om llsq.om caliq.om timf2.om tx.om \
powtim.om selvar.om fft2var.om sigvar.om screenvar.om uivar.om \
fft1var.om fft3var.om calvar.om blnkvar.om fft1_re.om lxsys.om \
powtvar.om blank1.om fft2.om sdrip.om affinity.om airspy.om \
pol_graph.om modesub.om spur.om cohsub.om coherent.om \
eme.om spursub.om freq_control.om lsdr.om httpd.om html_server.om \
@ASMLIB64@ \
rxin.om wcw.om mix1.om afcsub.om morse.om menu.om fonts.om rxout.om \
tune.om txtest.om network.om coh_osc.om fm.om loadusb.om soundcard.om \
cwspeed.om sdrvar.om sdr14.om keyboard_var.om thrvar.om pa.om \
fsys.om screen.om cwdetect.om tx_graph.om txssb.om pavar.om \
txvar.om screensub.om fft3.om meter_graph.om  wse.om si570.om \
soft66.om perseus.om usb2lpt.om excalibur.om extio.om rtl2832.om \
elektor.om fcdpp.om hid.om pcie9842.om bladerf.om mirics.om openhpsdr.om \
oclprogs.om loadalsa.om \
@LIBOPENCL64_LD@ @CLFFTPATH64@ \
@LIBXEXT64_LD@ \
@SVGA64_LD@ \
@SVGAGL64_LD@ \
-lpthread @LIBRT@ -lm -ldl $(LIBMACOSX)

	@echo " "
	@echo "You may want to disable pulseaudio in Ubuntu with this command:"
	@echo "sudo pasuspender -- ./flinrad64"
	@echo " "
endif

fvar.om: fvar.c rusage.h thrdef.h globdef.h lconf.h xdef.h ldef.h
	$(LCC) fvar.c $(CFL64) fvar.om
fsys.om: fsys.c rusage.h thrdef.h globdef.h uidef.h screendef.h xdef.h \
	keyboard_def.h lconf.h vernr.h sdrdef.h options.h
	$(LCC) fsys.c @SVGA32_INC@ @SVGAGL32_INC@ $(CFL64) fsys.om
fmain.om: fmain.c rusage.h thrdef.h globdef.h uidef.h screendef.h \
	vernr.h options.h keyboard_def.h lconf.h xdef.h ldef.h conf.h
	$(LCC) fmain.c @SVGA32_INC@ @SVGAGL32_INC@ $(CFL64) fmain.om
#--------------------------------------------------------------------------


lsetad.om: lsetad.c globdef.h uidef.h sigdef.h fft1def.h fft2def.h \
	fft3def.h conf.h screendef.h sdrdef.h vernr.h thrdef.h \
	hwaredef.h rusage.h ldef.h txdef.h options.h keyboard_def.h \
	loadalsa.h timing_setup.c input_speed.c
	$(LCC) lsetad.c -DALSA_LIBNAME=\"@ALSA64_LD@\" $(CFL64) lsetad.om

split.om: split64.s
	$(NASML64) split64.s -o split.om
fft2mmxa.om: fft2mmxa64.s
	$(NASML64) fft2mmxa64.s -o fft2mmxa.om
fft2mmxb.om: fft2mmxb64.s
	$(NASML64) fft2mmxb64.s -o fft2mmxb.om
fft2mmxc.om: fft2mmxc64.s
	$(NASML64) fft2mmxc64.s -o fft2mmxc.om
fftasm.om: fftasm64.s fftasm64.s
	$(NASML64) fftasm64.s -o fftasm.om
getiq.om: getiq64.s
	$(NASML64) getiq64.s -o getiq.om
simdasm.om: simdasm64.s
	$(NASML64) simdasm64.s -o simdasm.om

lxsys.om: lxsys.c rusage.h thrdef.h globdef.h uidef.h lconf.h xdef.h ldef.h \
	hwaredef.h options.h sdrdef.h
	$(LCC) lxsys.c $(CFL64) lxsys.om
lsdr.om: $(LSDR)
	$(LCC) lsdr.c $(CFL64) lsdr.om
adtest.om: $(ADTEST)
	$(LCC) adtest.c $(CFL64) adtest.om
afc_graph.om: $(AFC_GRAPH)
	$(LCC) afc_graph.c $(CFL64) afc_graph.om
afcsub.om: $(AFCSUB)
	$(LCC) afcsub.c $(CFL64) afcsub.om
afedri.om: $(AFEDRI)
	$(LCC) afedri.c $(CFL64) afedri.om
affinity.om: $(AFFINITY)
	$(LCC) affinity.c $(CFL64) affinity.om
airspy.om: $(AIRSPY)
	$(LCC) airspy.c -DAIRSPY_LIBNAME=\"@LIBAIRSPY64_LD@\" $(CFL64) airspy.om
baseb_graph.om: $(BASEB_GRAPH)
	$(LCC) baseb_graph.c $(CFL64) baseb_graph.om
bladerf.om: $(BLADERF)
	$(LCC) bladerf.c -DBLADERF_LIBNAME=\"@LIBBLADERF64_LD@\" \
	$(CFL64) bladerf.om
blank1.om: $(BLANK1)
	$(LCC) blank1.c $(CFL64) blank1.om
blnkvar.om: $(BLNKVAR)
	$(LCC) blnkvar.c $(CFL64) blnkvar.om
buf.om: $(BUF)
	$(LCC) buf.c $(CFL64) buf.om
calibrate.om: $(CALIBRATE)
	$(LCC) calibrate.c $(CFL64) calibrate.om
caliq.om: $(CALIQ)
	$(LCC) caliq.c $(CFL64) caliq.om
calsub.om: $(CALSUB)
	$(LCC) calsub.c $(CFL64) calsub.om
calsub2.om: $(CALSUB2)
	$(LCC) calsub2.c $(CFL64) calsub2.om
calvar.om: $(CALVAR)
	$(LCC) calvar.c $(CFL64) calvar.om
coh_osc.om: $(COH_OSC)
	$(LCC) coh_osc.c $(CFL64) coh_osc.om
coherent.om: $(COHERENT)
	$(LCC) coherent.c $(CFL64) coherent.om
cohsub.om: $(COHSUB)
	$(LCC) cohsub.c $(CFL64) cohsub.om
csplit.om: $(CSPLIT)
	$(LCC) csplit.c $(CFL64) csplit.om
cwspeed.om: $(CWSPEED)
	$(LCC) cwspeed.c $(CFL64) cwspeed.om
cwdetect.om: $(CWDETECT)
	$(LCC) cwdetect.c $(CFL64) cwdetect.om
elad.om: $(ELAD)
	$(LCC) elad.c -DFDMS1_LIBNAME=\"@LIBFDMS1_64_LD@\" $(CFL64) elad.om
elektor.om: $(ELEKTOR)
	$(LCC) elektor.c $(CFL64) elektor.om
eme.om: $(EME)
	$(LCC) eme.c $(CFL64) eme.om
excalibur.om: $(EXCALIBUR)
	$(LCC) excalibur.c $(CFL64) excalibur.om
extio.om: $(EXTIO)
	$(LCC) extio.c $(CFL64) extio.om
fcdpp.om: $(FCDPP)
	$(LCC) fcdpp.c $(CFL64) fcdpp.om
fft0.om: $(FFT0)
	$(LCC) fft0.c $(CFL64) fft0.om
fft1.om: $(FFT1)
	$(LCC) fft1.c $(CFL64) fft1.om
fft1_re.om: $(FFT1_RE)
	$(LCC) fft1_re.c $(CFL64) fft1_re.om
fft1var.om: $(FFT1VAR)
	$(LCC) fft1var.c $(CFL64) fft1var.om
fft2.om: $(FFT2)
	$(LCC) fft2.c $(CFL64) fft2.om
fft2var.om: $(FFT2VAR)
	$(LCC) fft2var.c $(CFL64) fft2var.om
fft3.om: $(FFT3)
	$(LCC) fft3.c $(CFL64) fft3.om
fft3var.om: $(FFT3VAR)
	$(LCC) fft3var.c $(CFL64) fft3var.om
fm.om: $(FM) 
	$(LCC) fm.c $(CFL64) fm.om
fonts.om: $(FONTS)
	$(LCC) fonts.c $(CFL64) fonts.om
freq_control.om: $(FREQ_CONTROL) @DEPS2@
	$(LCC) freq_control.c $(CFL64) freq_control.om
gifsave.om: $(GIFSAVE)
	$(LCC) gifsave.c $(CFL64) gifsave.om
help.om: $(HELP)
	$(LCC) help.c $(CFL64) help.om
ifeq ($(OS), Darwin)
hid.om: $(HID)
	$(LCC) hidmac.c $(CFL64) hid.om -Wno-unused-parameter
else
hid.om: $(HID)
	$(LCC) hid.c -DUDEV_LIBNAME=\"@LIBUDEV_64_LD@\" $(CFL64) hid.om
endif
hires_graph.om: $(HIRES_GRAPH)
	$(LCC) hires_graph.c $(CFL64) hires_graph.om
html_server.om: $(HTML_SERVER)
	$(LCC) html_server.c $(CFL64) html_server.om
httpd.om: $(HTTPD)
	$(LCC) httpd.c $(CFL64) httpd.om
hwaredriver.om: $(HWAREDRIVER) @LDEPS1@ lconf.h ldef.h
	$(LCC) hwaredriver.c $(CFL64) hwaredriver.om
keyboard_var.om: $(KEYBOARD_VAR)
	$(LCC) keyboard_var.c $(CFL64) keyboard_var.om
llsq.om: $(LLSQ)
	$(LCC) llsq.c $(CFL64) llsq.om
llsqvar.om: $(LLSQVAR)
	$(LCC) llsqvar.c $(CFL64) llsqvar.om
loadusb.om: $(LOADUSB)
	$(LCC) loadusb.c -DFTDI_LIBNAME=\"@LIBFTDI64_LD@\" \
	-DLIBUSB1_LIBNAME=\"@LIBUSB1_64_LD@\" \
	-DLIBUSB0_LIBNAME=\"@LIBUSB64_LD@\" 	$(CFL64) loadusb.om
loadalsa.om: $(LOADALSA)
	$(LCC) loadalsa.c -DALSA_LIBNAME=\"@ALSA64_LD@\" $(CFL64) loadalsa.om
menu.om: $(MENU)
	$(LCC) menu.c $(CFL64) menu.om
meter_graph.om: $(METER_GRAPH)
	$(LCC) meter_graph.c $(CFL64) meter_graph.om
mix1.om: $(MIX1)
	$(LCC) mix1.c $(CFL64) mix1.om
mix2.om: $(MIX2)
	$(LCC) mix2.c $(CFL64) mix2.om
mirics.om: $(MIRICS)
	$(LCC) mirics.c -DMIRISDR_LIBNAME=\"@LIBMIRISDR64_LD@\" $(CFL64) mirics.om
morse.om: $(MORSE)
	$(LCC) morse.c $(CFL64) morse.om
modesub.om: $(MODESUB)
	$(LCC) modesub.c $(CFL64) modesub.om
mouse.om: $(MOUSE)
	$(LCC) mouse.c $(CFL64) mouse.om
network.om: $(NETWORK) rusage.h
	$(LCC) network.c $(CFL64) network.om
oclprogs.om : $(OCLPROGS)
	$(LCC) oclprogs.c @OCLPROGS64@ @CLFFTINC@ -DLIR_OK=0 $(CFLOCL64) oclprogs.om
pa.om: $(PA)
	$(LCC) pa.c -DPA_LIBNAME=\"@PORTAUDIO64_LD@\" $(CFL64) pa.om
openhpsdr.om: $(OPENHPSDR)
	$(LCC) openhpsdr.c $(CFL64) openhpsdr.om
pavar.om: $(PAVAR)
	$(LCC) pavar.c $(CFL64) pavar.om
palette.om: $(PALETTE)
	$(LCC) palette.c $(CFL64) palette.om
pcie9842.om: $(PCIE9842)
	$(LCC) pcie9842.c -DPCI_LIBNAME=\"@LIBWD_DASK_64_LD@\" $(CFL64) pcie9842.om
perseus.om: $(PERSEUS)
	$(LCC) perseus.c -DPERSEUS_LIBNAME=\"@PERSEUS64_LD@\" $(CFL64) perseus.om
pol_graph.om: $(POL_GRAPH)
	$(LCC) pol_graph.c $(CFL64) pol_graph.om
powtim.om: $(POWTIM)
	$(LCC) powtim.c $(CFL64) powtim.om
powtvar.om: $(POWTVAR)
	$(LCC) powtvar.c $(CFL64) powtvar.om
radar.om: $(RADAR)
	$(LCC) radar.c $(CFL64) radar.om
rtl2832.om: $(RTL2832)
	$(LCC) rtl2832.c -DRTLSDR_LIBNAME=\"@LIBRTLSDR64_LD@\" $(CFL64) rtl2832.om
rxin.om: $(RXIN)
	$(LCC) rxin.c $(CFL64) rxin.om
rxout.om: $(RXOUT)
	$(LCC) rxout.c $(CFL64) rxout.om
screen.om: $(SCREEN)
	$(LCC) screen.c $(CFL64) screen.om
screenvar.om: $(SCREENVAR)
	$(LCC) screenvar.c $(CFL64) screenvar.om
screensub.om: $(SCREENSUB)
	$(LCC) screensub.c $(CFL64) screensub.om
sdr14.om: $(SDR14)
	$(LCC) sdr14.c $(CFL64) sdr14.om
sdrip.om: $(SDRIP)
	$(LCC) sdrip.c $(CFL64) sdrip.om
sdrvar.om: $(SDRVAR)
	$(LCC) sdrvar.c $(CFL64) sdrvar.om
sellim.om: $(SELLIM)
	$(LCC) sellim.c $(CFL64) sellim.om
selvar.om: $(SELVAR)
	$(LCC) selvar.c $(CFL64) selvar.om
si570.om: $(SI570)
	$(LCC) si570.c -DLIBUSB1_LIBNAME=\"@LIBUSB1_64_LD@\" \
	-DLIBUSB0_LIBNAME=\"@LIBUSB64_LD@\" $(CFL64) si570.om
sigvar.om: $(SIGVAR)
	$(LCC) sigvar.c $(CFL64) sigvar.om
soft66.om: $(SOFT66)
	$(LCC) soft66.c -DSOFT66_LIBNAME=\"@SOFT66_64_LD@\" $(CFL64) soft66.om
soundcard.om: $(SOUNDCARD)
	$(LCC) soundcard.c $(CFL64) soundcard.om
spur.om: $(SPUR)
	$(LCC) spur.c $(CFL64) spur.om
spursub.om: $(SPURSUB)
	$(LCC) spursub.c $(CFL64) spursub.om
thrvar.om: $(THRVAR)
	$(LCC) thrvar.c $(CFL64) thrvar.om
timing.om: $(TIMING)
	$(LCC) timing.c $(CFL64) timing.om
timf2.om: $(TIMF2)
	$(LCC) timf2.c $(CFL64) timf2.om
tune.om: $(TUNE)
	$(LCC) tune.c $(CFL64) tune.om
tx.om: $(TX)
	$(LCC) tx.c $(CFL64) tx.om
tx_graph.om: $(TX_GRAPH)
	$(LCC) tx_graph.c $(CFL64) tx_graph.om
txssb.om: $(TXSSB)
	$(LCC) txssb.c $(CFL64) txssb.om
txtest.om: $(TXTEST)
	$(LCC) txtest.c $(CFL64) txtest.om
txvar.om: $(TXVAR)
	$(LCC) txvar.c $(CFL64) txvar.om
ui.om: $(UI) lconf.h xdef.h ldef.h
	$(LCC) ui.c $(CFL64) ui.om
uivar.om: $(UIVAR)
	$(LCC) uivar.c $(CFL64) uivar.om
usb2lpt.om: $(USB2LPT)
	$(LCC) usb2lpt.c -DLIBUSB1_LIBNAME=\"@LIBUSB1_64_LD@\" \
	-DLIBUSB0_LIBNAME=\"@LIBUSB64_LD@\" $(CFL64) usb2lpt.om
wcw.om: $(WCW)
	$(LCC) wcw.c $(CFL64) wcw.om
wide_graph.om: $(WIDE_GRAPH)
	$(LCC) wide_graph.c $(CFL64) wide_graph.om
wse.om: $(WSE)
	$(LCC) wse.c -DLIBUSB1_LIBNAME=\"@LIBUSB1_64_LD@\" \
	-DLIBUSB0_LIBNAME=\"@LIBUSB64_LD@\" $(CFL64) wse.om


# ------------------      Tools for Linux      -----------------------
vgatest: vgatest.ol
	${CC} -o vgatest @ST@ vgatest.ol -lvgagl -lvga -lm 
vgatest.ol: vgatest.c
	${CC} vgatest.c -c -o vgatest.ol
mousetest: mousetest.ol
	${CC} -o mousetest @ST@ mousetest.ol -lvgagl -lvga -lm 
mousetest.ol: mousetest.c
	${CC} mousetest.c -c -o mousetest.ol

LIR_OBJDIR := /etc/linrad/modules-$(shell uname -r)/


svgalib :
	@test -w /etc || ( \
	echo; \
	echo ERROR: root permission required to install boot scripts; \
	__stop-at-error__)
	mkdir -p /etc/linrad
	mkdir -p $(LIR_OBJDIR)
	@test -f $(LIR_OBJDIR)/svgalib_helper.@MODEXT@ || ( \
	echo; \
	echo ERROR: copy svgalib_helper.@MODEXT@ to $(LIR_OBJDIR) and try again; \
	__stop-at-error__)
	rm -f /etc/linrad/svga
	cp svga /etc/linrad
	chmod 755 /etc/linrad/svga
	mkdir -p @INIT@/rc0.d
	mkdir -p @INIT@/rc1.d
	mkdir -p @INIT@/rc2.d
	mkdir -p @INIT@/rc3.d
	mkdir -p @INIT@/rc5.d
	mkdir -p @INIT@/rc6.d
	rm -f @INIT@/rc0.d/K28svga
	rm -f @INIT@/rc1.d/S96svga
	rm -f @INIT@/rc2.d/S96svga
	rm -f @INIT@/rc3.d/S96svga
	rm -f @INIT@/rc5.d/S96svga
	rm -f @INIT@/rc6.d/K28svga
	ln -s /etc/linrad/svga @INIT@/rc0.d/K28svga
	ln -s /etc/linrad/svga @INIT@/rc1.d/S96svga
	ln -s /etc/linrad/svga @INIT@/rc2.d/S96svga
	ln -s /etc/linrad/svga @INIT@/rc3.d/S96svga
	ln -s /etc/linrad/svga @INIT@/rc5.d/S96svga
	ln -s /etc/linrad/svga @INIT@/rc6.d/K28svga

@SDR1422@ :
	@echo ""
	@echo ""
	@echo "----------------------------------------------------"
	@echo "There is no driver for ft245 for linux 2.2.x kernels"
	@echo "Use linux 2.4.x or later"
	@echo "----------------------------------------------------"
	@echo ""

@SDR1424@ :
	@test -w /etc || ( \
	echo; \
	echo ERROR: root permission required to install boot scripts; \
	__stop-at-error__)
	mkdir -p /etc/linrad
	mkdir -p $(LIR_OBJDIR)
	cp usb_sdr14 /etc/linrad
	chmod 755 /etc/linrad/usb_sdr14
	${CC} -D__KERNEL__ -DCONFIG_USB_DEBUG=1 -I/usr/src/@LINDIR@/include \
-Wall -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing \
-fno-common -fomit-frame-pointer -pipe -mpreferred-stack-boundary=2 \
-march=i686 -DMODULE -DMODVERSIONS \
-include /usr/src/@LINDIR@/include/linux/modversions.h  \
-nostdinc -iwithprefix include -DKBUILD_BASENAME=ft245  \
-c -o ft245.o ft245.c
	rm -f /etc/linrad/ft245.o
	cp ft245.o $(LIR_OBJDIR)
	rm -f /etc/linrad/usb_sdr14
	cp usb_sdr14 /etc/linrad
	chmod 755 /etc/linrad/usb_sdr14
	mkdir -p @INIT@/rc0.d
	mkdir -p @INIT@/rc1.d
	mkdir -p @INIT@/rc2.d
	mkdir -p @INIT@/rc3.d
	mkdir -p @INIT@/rc5.d
	mkdir -p @INIT@/rc6.d
	rm -f @INIT@/rc0.d/K28usb_sdr14
	rm -f @INIT@/rc1.d/S96usb_sdr14
	rm -f @INIT@/rc2.d/S96usb_sdr14
	rm -f @INIT@/rc3.d/S96usb_sdr14
	rm -f @INIT@/rc5.d/S96usb_sdr14
	rm -f @INIT@/rc6.d/K28usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc0.d/K28usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc1.d/S96usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc2.d/S96usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc3.d/S96usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc5.d/S96usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc6.d/K28usb_sdr14


obj-m := ft245.o
KDIR  := /lib/modules/$(shell uname -r)/build
PWD   := $(shell pwd)
PGM   := @FT245PGM@


@SDR1426@ :
  ifneq ("$(PGM)", "ERROR")
	@test -w /etc || ( \
	@echo; \
	@echo ERROR: root permission required to install boot scripts; \
	__stop-at-error__)
	mkdir -p /etc/linrad
	mkdir -p $(LIR_OBJDIR)
	cp usb_sdr14 /etc/linrad
	chmod 755 /etc/linrad/usb_sdr14
	@echo --------------------------------------------------------------
	@echo In case the make command fails you must install the
	@echo kernel-devel package for your current kernel
	@echo Installing kernel-headers or some other kernel development
	@echo package might include the appropriate package by dependencies.
  ifeq ("@OSVER@", "9")
	@echo IF COMPILATION FAILS DUE TO ERRORS use the ttyUSB driver.
	@echo Add a file in your /etc/modprobe.d/ directory.
	@echo The file should contain these two lines:
	@echo options ftdi_sio vendor=0x403 product=0x6001
	@echo options ftdi_sio vendor=0x403 product=0xf728
	@echo After boot, but before launching Linrad you will have to type:
	@echo modprobe ftdi_sio or possibly modprobe ehci_hcd
	@echo " "
  endif	
	$(MAKE) -C $(KDIR) @KERNEL_SUBDIRS@=$(PWD) modules
	@echo --------------------------------------------------------------
	rm -f /etc/linrad/ft245.o
	rm -f /etc/linrad/ft245.ko
	cp ft245.o $(LIR_OBJDIR)
	cp ft245.ko $(LIR_OBJDIR)
	rm -f /etc/linrad/usb_sdr14
	cp usb_sdr14 /etc/linrad
	chmod 755 /etc/linrad/usb_sdr14
	mkdir -p @INIT@/rc0.d
	mkdir -p @INIT@/rc1.d
	mkdir -p @INIT@/rc2.d
	mkdir -p @INIT@/rc3.d
	mkdir -p @INIT@/rc5.d
	mkdir -p @INIT@/rc6.d
	rm -f @INIT@/rc0.d/K28usb_sdr14
	rm -f @INIT@/rc1.d/S96usb_sdr14
	rm -f @INIT@/rc2.d/S96usb_sdr14
	rm -f @INIT@/rc3.d/S96usb_sdr14
	rm -f @INIT@/rc5.d/S96usb_sdr14
	rm -f @INIT@/rc6.d/K28usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc0.d/K28usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc1.d/S96usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc2.d/S96usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc3.d/S96usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc5.d/S96usb_sdr14
	ln -s /etc/linrad/usb_sdr14 @INIT@/rc6.d/K28usb_sdr14
else
	@echo " "
	@echo " "
	@echo There is no ft245.c that works for kernels between
	@echo 2.6.0 and 2.6.3.
	@echo Use a kernel in the 2.4.xx series or
	@echo a kernel with version number 2.6.4 or above.
	@echo " "
  endif

@SDR1430@ :
	@echo " "
	@echo " "
	@echo Linrad does not supply drivers for modern kernels.
	@echo Add a file in your /etc/modprobe.d/ directory.
	@echo The file should contain these two lines:
	@echo options ftdi_sio vendor=0x403 product=0x6001
	@echo options ftdi_sio vendor=0x403 product=0xf728
	@echo Possibly also these two lines:
	@echo options ehci_hcd vendor=0x403 product=0x6001
	@echo options ehci_hcd vendor=0x403 product=0xf728
	@echo " "
	@echo After boot, but before launching Linrad you will have to type:
	@echo modprobe ftdi_sio or possibly modprobe ehci_hcd
